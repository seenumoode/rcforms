{"version":3,"sources":["validator.js","ADForm/root_controls/checkbox.js","ADForm/root_controls/custom.js","ADForm/form_utils.js","ADForm/root_controls/input.js","ADForm/root_controls/multistate.js","ADForm/root_controls/password.js","ADForm/root_controls/radio.js","ADForm/root_controls/readonly.js","ADForm/root_controls/select.js","ADForm/root_controls/textarea.js","ADForm/root_controls/toggle.js","ADForm/singleControl.js","ADForm/multiControl.js","ADForm/control.js","ADForm/fieldset.js","ADForm/controlGroup.js","ADForm/adform.js","App.js","index.js"],"names":["ipAddressValidator","value","length","test","validation","message","domainListValidator","allowAll","i","current","domainValidator","domainOrIpValidator","domainValidation","ipAddressValidation","module","exports","type","props","constructor","name","trim","Object","keys","toString","isRequired","emailvalidator","numberValidator","decimalValidator","minLength","maxLength","stringLengthValidator","passwordValidator","ipAddressListValidator","counter","hasOwnProperty","uniqueListValidator","subnetMaskValidator","domainOrIpListValidator","min","max","parseInt","validateNumRange","wordValidator","split","shortDomainNameValidator","usernameValidator","Checkbox","Fragment","className","style","onClick","e","handleChange","id","label","Custom","useContext","AdFormContext","controlsWithError","formData","error","component","validateControl","properties","validator","currentValidator","tempError","undefined","validateFormElement","Input","debounceFn","debounce","data","useCallback","val","target","parseFloat","indexOf","InputGroup","prepend","Prepend","Text","FormControl","controlid","onChange","placeholder","isInvalid","append","Append","Multistate","ButtonGroup","cursor","marginRight","states","map","state","index","Button","variant","display","Password","useState","showPwd","setShowPwd","prev","Radio","options","opt","text","ReadOnly","valToText","setVal","to","Select","showOptions","setShowOption","setOptions","search","setSearch","valBoxRef","useRef","optionsBoxRef","height","setStyle","useEffect","window","addEventListener","handleClickOutside","document","handleScroll","removeEventListener","valText","useMemo","op","closest","optFltFn","filterOptions","str","filter","item","toLowerCase","includes","setOptionCss","valEleRect","getBoundingClientRect","top","width","left","getComputedStyle","ref","prevState","TextArea","purpose","as","Toggle","SingleControl","this","React","Component","MultiControl","hiddenIds","values","Array","from","cssClass","errorMsg","controls","ctrl","idx","size","noSeparateLabelElement","ControlElementOnly","disabledIds","control","readOnly","show","setShow","help","noLabel","Overlay","placement","Tooltip","onMouseOver","onMouseLeave","Control","warning","warn","note","opacity","fontStyle","fontSize","color","Fieldset","ControlGroup","prototypes","PropTypes","shape","arrayOf","string","oneOf","key","oneOfType","func","createContext","ADForm","setupFormDataAndControl","every","ct","updatedDisabledAndHiddenControls","setState","originalFormData","setHidden","hidIdx","disIdx","hide","tempVal","checkHidden","splice","push","disable","checkDisabled","isParentHidden","hx","controlOnChange","changedControls","ccIdx","autoSubmit","formSubmissionFunctionality","submitForm","preventDefault","stopPropagation","formdata","showFormMessage","submitHandler","showStateFormMessage","resetForm","prevProps","o1","o2","texts","successSubmission","errorSubmission","formClasses","noEvent","isFormSubmitted","title","description","Provider","memo","App","first_name","middle_name","last_name","age","desc","address","city","country","pin","allow","use_cool","pwd","tristate","mc","rad","setValues","isSub","marginTop","Cs","rootElement","getElementById","ReactDOM","render"],"mappings":"8GAoFA,SAASA,EAAmBC,GAC1B,MAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,SAM5D,mKAAmKC,KACjKF,GANK,CACLG,YAAY,GAUP,CACLA,YAAY,EACZC,QAAS,qBAGd,CACD,SAASC,EAAoBL,EAAOM,GAClC,GAAsB,qBAAVN,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACrC,IAAIC,EAAUR,EAAMO,GAEpB,IAA8B,IADbE,EAAgBD,EAASF,GAC3BH,WAEb,OADAI,EAAIP,EAAMC,OACH,CACLE,YAAY,EACZC,QAAS,0CAA4CI,EAG1D,CACD,MAAO,CACLL,YAAY,EAEf,CACD,SAASM,EAAgBT,EAAOM,GAC9B,MAAsB,qBAAVN,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QACrD,CACLE,YAAY,GAGZH,EAAMC,OAAS,GACV,CACLE,YAAY,EACZC,QAAS,mBAITE,EACM,6FAEA,6EAEAJ,KAAKF,GACN,CAAEG,YAAY,GAEd,CACLA,YAAY,EACZC,QAAS,iBAGd,CAoLD,SAASM,EAAoBV,GAC3B,IAAMW,EAAmBF,EAAgBT,GACnCY,EAAsBb,EAAmBC,GAE/C,OAAKW,EAAiBR,YAAeS,EAAoBT,WAMlD,CAAEA,YAAY,GALZ,CACLA,YAAY,EACZC,QAAS,sDAId,CAkHDS,EAAOC,QAvcP,SAA6BC,EAAMf,EAAOgB,GACxC,MAA8B,aAA1BD,EAAKE,YAAYC,KACZH,EAAKf,GACM,eAATe,EA0Ob,SAAoBf,GAClB,OAAIA,GAAoC,UAA3BA,EAAMiB,YAAYC,KAET,qBAAVlB,GACG,OAAVA,GAAmC,IAAjBA,EAAMC,SAOJ,IAAjBD,EAAMC,QAA2C,IAA3BD,EAAM,GAAGmB,OAAOlB,OALnC,CACLE,YAAY,EACZC,QAAS,qDASJ,CACLD,YAAY,GAGPH,GAAoC,WAA3BA,EAAMiB,YAAYC,KACF,IAA9BE,OAAOC,KAAKrB,GAAOC,OACd,CACLE,YAAY,EACZC,QAAS,qDAGJ,CACLD,YAAY,GAIZH,GACEA,EAAMsB,WAAWrB,OAAS,EACrB,CACLE,YAAY,GAST,CACLA,YAAY,EACZC,QAAS,oDAIhB,CA5RUmB,CAAWvB,GACA,UAATe,EA6Rb,SAAwBf,GACtB,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,MACE,uEAAuED,KACrEF,GAGK,CACLG,YAAY,GAGP,CACLA,YAAY,EACZC,QAAS,wBAGd,CAhTUoB,CAAexB,GACJ,WAATe,EAoNb,SAAyBf,GACvB,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,MAAI,WAAWD,KAAKF,GACX,CACLG,YAAY,GAGP,CACLA,YAAY,EACZC,QAAS,iBAGd,CAnOUqB,CAAgBzB,GACL,YAATe,EAgMb,SAA0Bf,GACxB,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,MAAI,kBAAkBD,KAAKF,GAClB,CACLG,YAAY,GAGP,CACLA,YAAY,EACZC,QAAS,iBAGd,CA/MUsB,CAAiB1B,GACN,WAATe,EA8Jb,SAA+Bf,EAAO2B,EAAWC,GAE/C,GACwB,qBAAdD,EACO,IAAdA,EACiB,qBAAV3B,GACG,OAAVA,GAAmC,IAAjBA,EAAMC,QAEzB,MAAO,CAAEE,YAAY,GAEvB,GAAyB,qBAAdyB,EACT,OAAI5B,GAASA,EAAMC,QAAU0B,GAAa3B,EAAMC,QAAU2B,EACjD,CAAEzB,YAAY,GAEd,CACLA,YAAY,EACZC,QACE,6BACAuB,EACA,kBACAC,GAIR,OAAQ5B,EAAQA,EAAMC,SAAW0B,EAC7B,CAAExB,YAAY,GACd,CACEA,YAAY,EACZC,QAAS,kDAAoDuB,EAEpE,CA3LUE,CAAsB7B,EAAOgB,EAAMW,UAAWX,EAAMY,WACzC,aAATb,EA2Ib,SAA2Bf,GACzB,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,MAAI,qDAAqDD,KAAKF,GACrD,CAAEG,YAAY,GAEd,CACLA,YAAY,EACZC,QAAQ,4KAIb,CAzJU0B,CAAkB9B,GACP,cAATe,EACFhB,EAAmBC,GACR,kBAATe,EA8Cb,SAAgCf,GAC9B,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACrC,IAAIC,EAAUR,EAAMO,GAEpB,IAA8B,IADbR,EAAmBS,GACrBL,WAEb,OADAI,EAAIP,EAAMC,OACH,CACLE,YAAY,EACZC,QAAS,+CAAiDI,EAG/D,CACD,MAAO,CACLL,YAAY,EAEf,CAjEU4B,CAAuB/B,GACZ,WAATe,EACFN,EAAgBT,GACL,eAATe,EACFV,EAAoBL,GACT,mBAATe,EACFN,EAAgBT,GAAO,GACZ,uBAATe,EACFV,EAAoBL,GAAO,GAChB,eAATe,EAmBb,SAA6Bf,GAC3B,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CAAEE,YAAY,GAIvB,IAFA,IAAI6B,EAAU,CAAC,EACX7B,EAAa,CAAEA,YAAY,GACtBI,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAC5ByB,EAAQC,eAAejC,EAAMO,KAC/BJ,EAAU,YAAiB,EAC3BA,EAAU,QAAcH,EAAMO,GAAK,oBAEnCyB,EAAQhC,EAAMO,IAAM,EAGxB,OAAOJ,CACR,CAjCU+B,CAAoBlC,GACT,eAATe,EA2Rb,SAA6Bf,GAC3B,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CAAEE,YAAY,GAEvB,MACE,kNAAkND,KAChNF,GAGK,CAAEG,YAAY,GAEd,CACLA,YAAY,EACZC,QAAS,uBAGd,CA1SU+B,CAAoBnC,GACT,eAATe,EACFL,EAAoBV,GACT,mBAATe,EAsTb,SAAiCf,GAC/B,GACoB,qBAAVA,EAA2C,IAAjBA,EAAMC,QAC9B,OAAVD,GACkB,IAAjBA,EAAMC,QAAoC,KAApBD,EAAM,GAAGmB,OAEhC,MAAO,CACLhB,YAAY,GAGhB,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACrC,IAAIC,EAAUR,EAAMO,GAEpB,IAA8B,IADbG,EAAoBF,GACtBL,WAEb,OADAI,EAAIP,EAAMC,OACH,CACLE,YAAY,EACZC,QACE,sEACAI,EAGP,CACD,MAAO,CACLL,YAAY,EAEf,CA/UUiC,CAAwBpC,GACb,aAATe,EAgVb,SAA0Bf,EAAOqC,EAAKC,GACpC,OAAIC,SAASvC,IAAUuC,SAASF,IAAQE,SAASvC,IAAUuC,SAASD,GAC3D,CAAEnC,YAAY,GAEd,CACLA,YAAY,EACZC,QAAS,iCAAmCiC,EAAM,IAAMC,EAG7D,CAxVUE,CAAiBxC,EAAOgB,EAAMqB,IAAKrB,EAAMsB,KAC9B,SAATvB,EAyVb,SAAuBf,GACrB,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,MAAI,mBAAmBD,KAAKF,GACnB,CAAEG,YAAY,GAEd,CACLA,YAAY,EACZC,QAAS,iEAGd,CAtWUqC,CAAczC,GACH,gBAATe,EAuWb,SAAkCf,GAChC,GAAsB,qBAAVA,GAAoC,OAAVA,GAAmC,IAAjBA,EAAMC,QAC5D,MAAO,CACLE,YAAY,GAGhB,GAAIH,EAAMC,OAAS,GACjB,MAAO,CACLE,YAAY,EACZC,QAAS,mDAGb,GAA2B,MAAvBJ,EAAM0C,MAAM,IAAI,GAClB,MAAO,CACLvC,YAAY,EACZC,QAAS,8CAGb,GAAI,sBAAsBF,KAAKF,GAC7B,MAAO,CACLG,YAAY,EACZC,QACE,2FAGN,GAAImC,SAASvC,GAAOsB,aAAetB,EACjC,MAAO,CACLG,YAAY,EACZC,QAAS,8CAGb,GAAI,cAAcF,KAAKF,GACrB,MAAO,CACLG,YAAY,GAGhB,MAAO,CACLA,YAAY,EACZC,QACE,oHAEL,CA/YUuC,CAAyB3C,GACd,aAATe,EAgZb,SAA2Bf,GACzB,MAAI,iBAAiBE,KAAKF,GACjB,CACLG,YAAY,GAGP,CACLA,YAAY,EACZC,QACE,mFAGP,CA3ZUwC,CAAkB5C,QADpB,CAGR,C,6OC1Bc6C,EAhBE,SAAC7B,GAChB,OACE,cAAC,IAAM8B,SAAP,UACE,wBAAOC,UAAU,4BAA4BC,MAAOhC,EAAMgC,MAA1D,UACE,sBACED,UAAS,mBAAc/B,EAAMhB,MAAQ,UAAY,IACjDiD,QAAS,SAACC,GACRlC,EAAMmC,aAAanC,EAAMoC,IAAKpC,EAAMhB,MACrC,IACM,IACRgB,EAAMqC,UAId,ECQcC,EApBA,SAACtC,GACd,MAAwCuC,qBAAWC,GAA3CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,SACrBC,EAAQF,EAAkBzC,EAAMoC,MAAO,EAC7C,OACE,sBAAKL,UAAU,yBAAyBC,MAAOhC,EAAMgC,MAArD,UACE,qBAAKD,UAAU,iCAAf,SACE,cAAC/B,EAAM4C,UAAP,2BAAqB5C,GAArB,IAA4B0C,SAAUA,OAEvCC,GAAS,qBAAKZ,UAAU,wBAAf,SAAwCY,MAGvD,E,yBCiDM,SAASE,EAAgB7D,EAAO8D,EAAYJ,GACjD,IAAIC,GAAQ,EACNI,EAAYD,EAAWC,UAC7B,IAAKA,EACH,OAAO,EAET,GAAmC,UAA/BA,EAAU9C,YAAYC,KACxB,IAAK,IAAIX,EAAI,EAAGA,EAAIwD,EAAU9D,OAAQM,IAAK,CACzC,IAAMyD,EAAmBD,EAAUxD,GAC/B0D,OAAYC,EAMhB,GALgC,oBAArBF,EACTC,EAAYD,EAAiBhE,EAAO0D,GACC,kBAArBM,GAChBG,IAAoBH,EAAkBhE,EAAO8D,IAE1CG,EAAU9D,WAAY,CACzBwD,EAAQM,EAAU7D,QAClB,KACD,CACKG,IAAMwD,EAAU9D,OAAS,IAC3B0D,GAAQ,EAGb,KAC6B,oBAAdI,EAChBJ,EAAQI,EAAU/D,EAAO0D,GACK,kBAAdK,GAChBI,IAAoBJ,EAAW/D,EAAO8D,GAExC,OAAOH,CACR,C,oBC9BcS,EA1DD,SAACpD,GAAW,IAAD,EACvB,EAAwCuC,qBAAWC,GAA3CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,SACrBC,EAAQF,EAAkBzC,EAAMoC,MAAO,EACvCiB,EAAaC,oBAAS,SAACtE,EAAO8D,EAAYS,GAC9C,IAAMZ,EAAQE,EAAgB7D,EAAO8D,EAAYS,GAC7CZ,GACFG,EAAWX,aAAaW,EAAWV,GAAIpD,EAAO2D,EAEjD,GAAE,KACGR,EAAeqB,uBAAY,SAAUtB,GACzC,IAAIuB,EAAMvB,EAAEwB,OAAO1E,MACA,WAAfgB,EAAMD,KACR0D,EAAMlC,SAASkC,EAAK,IACI,UAAfzD,EAAMD,OACf0D,EAAME,WAAWF,IAEnBzD,EAAMmC,aAAanC,EAAMoC,GAAIqB,GAC7BJ,EAAWI,EAAKzD,EAAO0C,EACxB,GAAE,IACGnC,IAAaP,EAAM+C,YACM,kBAApB/C,EAAM+C,UACS,eAApB/C,EAAM+C,UACN/C,EAAM+C,UAAUa,QAAQ,eAAiB,GAE/C,OACE,eAAC,IAAM9B,SAAP,WACE,eAAC+B,EAAA,EAAD,WACG7D,EAAM8D,SACL,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,sBAAiBpC,EAAMoC,IAA1C,SACGpC,EAAM8D,YAIb,cAACG,EAAA,EAAD,CACElC,UAAS,gCAA2BY,EAAQ,YAAc,IAC1D3D,MAAOgB,EAAMhB,MACbe,KAAMC,EAAMD,KACZmE,UAAWlE,EAAMoC,GACjB+B,SAAUhC,EACViC,YAAW,UAAK7D,EAAa,GAAK,aAAvB,sBACTP,EAAMoE,mBADG,wBACqBpE,EAAMqC,QAEtCgC,YAAW1B,IAEZ3C,EAAMsE,QACL,cAACT,EAAA,EAAWU,OAAZ,UACE,cAACV,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,qBAAgBpC,EAAMoC,IAAzC,SACGpC,EAAMsE,cAKd3B,GAAS,qBAAKZ,UAAU,wBAAf,SAAwCY,MAGvD,E,QCnCc6B,EAxBI,SAACxE,GAClB,OACE,cAAC,IAAM8B,SAAP,UACE,cAAC2C,EAAA,EAAD,CAAazC,MAAO,CAAE0C,OAAQ,UAAWC,YAAa,UAAtD,SACG3E,EAAM4E,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,cAACC,EAAA,EAAD,CAEEC,QACEjF,EAAMhB,QAAU8F,EAAM9F,MAAtB,UACOgB,EAAMiF,QAAUjF,EAAMiF,QAAU,iBADvC,kBAEejF,EAAMiF,QAAUjF,EAAMiF,QAAU,iBAEjDhD,QAAS,SAACC,GACRlC,EAAMmC,aAAanC,EAAMoC,GAAI0C,EAAM9F,MACpC,EATH,SAWG8F,EAAMI,SAVFH,EAFS,OAkBzB,E,QC0CcI,EA5DE,SAACnF,GAAW,IAAD,EAC1B,EAAwCuC,qBAAWC,GAA3CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,SACrBC,EAAQF,EAAkBzC,EAAMoC,MAAO,EACvCiB,EAAaC,oBAAS,SAACtE,EAAO8D,EAAYS,GAC9C,IAAMZ,EAAQE,EAAgB7D,EAAO8D,EAAYS,GAC7CZ,GACFG,EAAWX,aAAaW,EAAWV,GAAIpD,EAAO2D,EAEjD,GAAE,KACGR,EAAeqB,uBAAY,SAAUtB,GACzC,IAAIuB,EAAMvB,EAAEwB,OAAO1E,MACnBgB,EAAMmC,aAAanC,EAAMoC,GAAIqB,GAC7BJ,EAAWI,EAAKzD,EAAO0C,EACxB,GAAE,IACGnC,IAAaP,EAAM+C,YACM,kBAApB/C,EAAM+C,UACS,eAApB/C,EAAM+C,UACN/C,EAAM+C,UAAUa,QAAQ,eAAiB,GAG/C,EAA8BwB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,eAAC,IAAMxD,SAAP,WACE,eAAC+B,EAAA,EAAD,WACG7D,EAAM8D,SACL,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,sBAAiBpC,EAAMoC,IAA1C,SACGpC,EAAM8D,YAIb,cAACG,EAAA,EAAD,CACElC,UAAS,gCAA2BY,EAAQ,YAAc,IAC1D3D,MAAOgB,EAAMhB,MACbe,KAAI,UAAKsF,EAAU,OAAS,YAC5BnB,UAAWlE,EAAMoC,GACjB+B,SAAUhC,EACViC,YAAW,UAAK7D,EAAa,GAAK,aAAvB,sBACTP,EAAMoE,mBADG,wBACqBpE,EAAMqC,QAEtCgC,YAAW1B,IAGb,cAACkB,EAAA,EAAWU,OAAZ,CACEvC,MAAO,CAAE0C,OAAQ,WACjBzC,QAAS,SAACC,GACRoD,GAAW,SAACC,GAAD,OAAWA,CAAX,GACZ,EAJH,SAME,eAAC1B,EAAA,EAAWG,KAAZ,WACGqB,GAAW,cAAC,IAAD,KACVA,GAAW,cAAC,IAAD,YAIlB1C,GAAS,qBAAKZ,UAAU,wBAAf,SAAwCY,MAGvD,EC3Cc6C,EApBD,SAACxF,GACb,OACE,cAAC,IAAM8B,SAAP,UACE,uBAAOC,UAAU,yBAAyBC,MAAOhC,EAAMgC,MAAvD,SACGhC,EAAMyF,QAAQZ,KAAI,SAACa,GAAD,OACjB,sBAAqB3D,UAAU,8BAA/B,UACE,sBACEA,UAAS,gBAAW/B,EAAMhB,QAAU0G,EAAI1G,MAAQ,UAAY,IAC5DiD,QAAS,SAACC,GACRlC,EAAMmC,aAAanC,EAAMoC,GAAIsD,EAAI1G,MAClC,IACM,IACR0G,EAAIC,OAPGD,EAAI1G,MADG,OAc1B,E,QCmBc4G,EApCE,SAAC5F,GAChB,IAeMyD,EAfS,WACb,IAAIA,EAAMzD,EAAMhB,MACVe,EAAOC,EAAMD,KACnB,GAAa,aAATA,EACF0D,EAAMA,EAAM,OAAS,aAChB,GAAa,WAAT1D,EAAmB,CAC5B,IAD4B,EACxB8F,EAAY,CAAC,EADW,cAEZ7F,EAAMyF,SAFM,IAE5B,2BAA+B,CAAC,IAAvBC,EAAsB,QAC7BG,EAAUH,EAAI1G,MAAMsB,YAAcoF,EAAIC,IACvC,CAJ2B,+BAK5BlC,EAAMoC,EAAUpC,EACjB,CAED,OAAOA,CACR,CACWqC,GACZ,OACE,eAAC,IAAMhE,SAAP,WACG9B,EAAM0D,QACL,cAAC,IAAD,CACE3B,UAAU,mBACVgE,GAAI/F,EAAMhB,MAAQgB,EAAM0D,OAAS,IAFnC,SAIGD,GAAY,sCAGfzD,EAAM0D,QACN,sBAAM3B,UAAU,mBAAmBC,MAAOhC,EAAMgC,MAAhD,SACGyB,GAAY,uCAKtB,EC0GcuC,EA1IA,SAAChG,GACd,MAAqCoF,oBAAS,GAA9C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAA8Bd,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBU,EAAhB,KACA,EAA4Bf,mBAAS,IAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACMC,EAAYC,iBAAO,MACnBC,EAAgBD,iBAAO,MAC7B,EAA0BnB,mBAAS,CAAEqB,OAAQ,QAA7C,mBAAOzE,EAAP,KAAc0E,EAAd,KACAC,qBAAU,WAKR,OAJAC,OAAOC,iBAAiB,QAASC,GACjCC,SAASF,iBAAiB,SAAUG,GACpCJ,OAAOC,iBAAiB,SAAUG,GAClCb,EAAWnG,EAAMyF,SACV,WACLmB,OAAOK,oBAAoB,QAASH,GACpCC,SAASE,oBAAoB,SAAUD,GACvCJ,OAAOK,oBAAoB,SAAUD,EACtC,CACF,GAAE,IACH,IAAME,EAAUC,mBAAQ,WACtB,IAD4B,EACxBC,EAAK,CAAC,EADkB,cAEZpH,EAAMyF,SAFM,IAE5B,2BAA+B,CAAC,IAAvBC,EAAsB,QAC7B0B,EAAG1B,EAAI1G,MAAMsB,YAAcoF,EAAIC,IAChC,CAJ2B,+BAK5B,OAAOyB,CACR,GAAE,CAACpH,EAAMyF,UACV,SAASqB,EAAmB5E,GAC1B,IAAMwB,EAASxB,EAAEwB,OAEdA,EAAO2D,QAAP,8CAAsDrH,EAAMoC,GAA5D,OACAsB,EAAO2D,QAAP,0CAAkDrH,EAAMoC,GAAxD,OAED8D,GAAc,EAEjB,CACD,IACMvD,EADwBJ,qBAAWC,GAAjCC,kBACwBzC,EAAMoC,MAAO,EACvCiB,EAAaC,oBAAS,SAACG,EAAK6D,GAChCA,EAAS7D,EACV,GAAE,KACH,SAAS8D,EAAcC,GACrB,IAAIJ,EAAE,YAAOpH,EAAMyF,SACf+B,EAAIrH,OAAOlB,OAAS,IACtBmI,EAAKA,EAAGK,QAAO,SAACC,GAAD,OACbA,EAAK/B,KAAKgC,cAAcC,SAASJ,EAAIG,cADxB,KAIjBxB,EAAWiB,EACZ,CAYD,SAASS,IACP,IAAMC,EAAaxB,EAAU9G,QAAQuI,wBACnCC,EAAMF,EAAWE,IAAMF,EAAWrB,OAEpCC,EAAS,CACPsB,IAAKA,EACLC,MAAOH,EAAWG,MAClBC,KAAMJ,EAAWI,MAEpB,CACD,SAASlB,IACiD,SAApDmB,iBAAiB3B,EAAchH,SAAS0F,SAC1C2C,GAEH,CACD,OACE,eAAC,IAAM/F,SAAP,WACE,eAAC+B,EAAA,EAAD,WACG7D,EAAM8D,SACL,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,sBAAiBpC,EAAMoC,IAA1C,SACGpC,EAAM8D,YAIb,sBAAK/B,UAAU,iBAAf,UACE,qBACEA,UAAS,6BAAwBkE,EAAc,SAAW,IAC1D,WAAUjG,EAAMoC,GAChBgG,IAAK9B,EACLrE,QApCV,SAA0BC,GACnB+D,GACH4B,IAEF3B,GAAc,SAACmC,GAAD,OAAgBA,CAAhB,GACf,EA2BO,SAMGrI,EAAMhB,MAAQkI,EAAQlH,EAAMhB,OAA5B,oBAAkDgB,EAAMqC,MAAxD,SAEH,sBACEN,UAAS,iCAA4BkE,EAAc,OAAS,IAC5DjE,MAAOA,EACP,WAAUhC,EAAMoC,GAChBgG,IAAK5B,EAJP,UAME,cAACvC,EAAA,EAAD,CACElE,KAAK,OACLgC,UAAU,wBACV/C,MAAOoH,EACPjC,SAvDZ,SAAsBjC,GACpB,IAAMuB,EAAMvB,EAAEwB,OAAO1E,MACrBqH,EAAU5C,GACVJ,EAAWI,EAAK8D,EACjB,EAoDWnD,YAAY,mBAEbqB,EAAQZ,KAAI,SAACa,GAAD,OACX,qBAEE3D,UAAS,gCACP/B,EAAMhB,QAAU0G,EAAI1G,MAAQ,WAAa,IAE3CiD,QAAS,SAACC,GACJlC,EAAMhB,QAAU0G,EAAI1G,QACtBgB,EAAMmC,aAAanC,EAAMoC,GAAIsD,EAAI1G,OACjCkH,GAAc,GAEjB,EAVH,SAYGR,EAAIC,MAZP,UACUD,EAAI1G,OAFH,UAkBhBgB,EAAMsE,QACL,cAACT,EAAA,EAAWU,OAAZ,UACE,cAACV,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,qBAAgBpC,EAAMoC,IAAzC,SACGpC,EAAMsE,cAMd3B,GAAS,qBAAKZ,UAAU,wBAAf,SAAwCY,MAGvD,ECtEc2F,EAjEE,SAACtI,GAAW,IAAD,EAC1B,EAAwCuC,qBAAWC,GAA3CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,SACrBC,EAAQF,EAAkBzC,EAAMoC,MAAO,EACvCiB,EAAaC,oBAAS,SAACtE,EAAO8D,EAAYS,GAC9C,IAAMZ,EAAQE,EAAgB7D,EAAO8D,EAAYS,GAC7CZ,GACFG,EAAWX,aAAaW,EAAWV,GAAIpD,EAAO2D,EAEjD,GAAE,KACGR,EAAeqB,uBAAY,SAAUtB,GACzC,IAAIuB,EAAMvB,EAAEwB,OAAO1E,MACfgB,EAAMuI,SAA6B,SAAlBvI,EAAMuI,UAOzB9E,GAJEA,EADEA,EAAItD,OAAOlB,OAAS,EAChBwE,EAAI/B,MAAM,KAEV,IAEEmD,KAAI,SAAC6C,GAAD,OAAUA,EAAKvH,MAAf,KAEhBH,EAAMmC,aAAanC,EAAMoC,GAAIqB,GAC7BJ,EAAWI,EAAKzD,EAAO0C,EACxB,GAAE,IACGnC,IAAaP,EAAM+C,YACM,kBAApB/C,EAAM+C,UACS,eAApB/C,EAAM+C,UACN/C,EAAM+C,UAAUa,QAAQ,eAAiB,GAEzCQ,EAAW,UACfpE,EAAMoE,mBADS,QAEI,SAAlBpE,EAAMuI,QAAN,gBACYvI,EAAMqC,OACf,+BACN,OACE,eAAC,IAAMP,SAAP,WACE,eAAC+B,EAAA,EAAD,WACG7D,EAAM8D,SACL,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,sBAAiBpC,EAAMoC,IAA1C,SACGpC,EAAM8D,YAIb,cAACG,EAAA,EAAD,CACElC,UAAU,wBACV/C,MAAOgB,EAAMhB,MACbwJ,GAAIxI,EAAMD,KACVmE,UAAWlE,EAAMoC,GACjB+B,SAAUhC,EACViC,YAAW,UAAK7D,EAAa,GAAK,aAAvB,YAAuC6D,GAClDC,YAAW1B,IAEZ3C,EAAMsE,QACL,cAACT,EAAA,EAAWU,OAAZ,UACE,cAACV,EAAA,EAAWG,KAAZ,CAAiB5B,GAAE,qBAAgBpC,EAAMoC,IAAzC,SACGpC,EAAMsE,cAKd3B,GAAS,qBAAKZ,UAAU,wBAAf,SAAwCY,MAGvD,ECnDc8F,EAhBA,SAACzI,GACd,OACE,cAAC,IAAM8B,SAAP,UACE,wBAAOC,UAAU,2BAA2BC,MAAOhC,EAAMgC,MAAzD,UACE,sBACED,UAAS,yBAAmC,IAAhB/B,EAAMhB,MAAiB,SAAW,IAC9DiD,QAAS,SAACC,GACRlC,EAAMmC,aAAanC,EAAMoC,IAAKpC,EAAMhB,MACrC,IACM,IACRgB,EAAMqC,UAId,ECJKqG,E,4JACJ,WACE,OAAQC,KAAK3I,MAAMD,MACjB,IAAK,SACH,OAAO,cAAC,EAAD,eAAY4I,KAAK3I,QAC1B,IAAK,WACH,OAAO,cAAC,EAAD,eAAc2I,KAAK3I,QAC5B,IAAK,WACH,OAAO,cAAC,EAAD,eAAc2I,KAAK3I,QAC5B,IAAK,WACH,OAAO,cAAC,EAAD,eAAc2I,KAAK3I,QAC5B,IAAK,aACH,OAAO,cAAC,EAAD,eAAgB2I,KAAK3I,QAC9B,IAAK,WACH,OAAO,cAAC,EAAD,eAAc2I,KAAK3I,QAC5B,IAAK,SACH,OAAO,cAAC,EAAD,eAAY2I,KAAK3I,QAC1B,IAAK,QACH,OAAO,cAAC,EAAD,eAAW2I,KAAK3I,QACzB,IAAK,SACH,OAAO,cAAC,EAAD,eAAY2I,KAAK3I,QAC1B,QACE,OAAO,cAAC,EAAD,eAAW2I,KAAK3I,QAE5B,K,GAxByB4I,IAAMC,WA2BnBH,ICGAI,EAtCM,SAAC9I,GACpB,MAAyCuC,qBAAWC,GAA5CC,EAAR,EAAQA,kBAAmBsG,EAA3B,EAA2BA,UAC3B,SAAS5G,EAAasB,EAAKsB,EAAOpC,GAChC,IAAIqG,EAASC,MAAMC,KAAKlJ,EAAMhB,OAC9BgK,EAAOjE,GAAStB,EAChBzD,EAAMmC,aAAa6G,EAAQhJ,EAAMoC,GAAIO,EACtC,CAED,IAAIwG,EAAW,2BACTC,IAAW3G,EAAkBzC,EAAMoC,KACrCK,EAAkBzC,EAAMoC,IAK5B,OAHIgH,IACFD,GAAY,cAGZ,sBAAKpH,UAAWoH,EAAhB,UACGnJ,EAAMqJ,SAASxE,KAAI,SAACyE,EAAMC,GAAP,OAClB,cAAC,IAAMzH,SAAP,UACGiH,EAAUnF,QAAQ0F,EAAKlH,IAAM,GAC5B,qBAAKL,UAAS,iCAA4BuH,EAAKE,MAA/C,SACE,cAAC,EAAD,2BACMF,GADN,IAEElH,GAAImH,EACJpH,aAAcA,EACdiC,YAAW,sBAAiBmF,EAAjB,kBAA8BvJ,EAAMqC,aAPvD,kBAAgCkH,GADd,IAcnB9G,EAAkBzC,EAAMoC,KACvB,qBAAKL,UAAU,iCAAf,SAAiDqH,MAIxD,EChCKK,EAAyB,CAAC,WAAY,UAwFrC,SAASC,EAAT,GAMH,IALFC,EAKC,EALDA,YACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,SACA7K,EAEC,EAFDA,MACAmD,EACC,EADDA,aAEA,EAAwBiD,oBAAS,GAAjC,mBAAO0E,EAAP,KAAaC,EAAb,KACM3B,EAAM7B,iBAAO,MACbyD,EACJJ,EAAQI,OACPH,IACAJ,EAAuB7B,SAASgC,EAAQ7J,OAAS6J,EAAQK,SAC5D,OACE,sBAAKlI,UAAS,0BAAqBiI,EAAO,cAAgB,IAA1D,UACE,sBACEjI,UAAS,iCACP4H,EAAY/F,QAAQgG,EAAQxH,KAAO,EAAI,mBAAqB,GADrD,KADX,UAKGyH,GAAY,cAAC,EAAD,2BAAcD,GAAd,IAAuB5K,MAAOA,MACzC6K,GACA,cAAC,EAAD,2BACMD,GADN,IAEE5K,MAAOA,EACPmD,aAAcA,QAInB6H,GACC,eAAC,IAAMlI,SAAP,WACE,cAACoI,EAAA,EAAD,CAASC,UAAU,SAASL,KAAMA,EAAMpG,OAAQ0E,EAAI5I,QAApD,SACG,SAACQ,GAAD,OACC,cAACoK,EAAA,EAAD,yBAAShI,GAAE,uBAAkBwH,EAAQxH,KAAUpC,GAA/C,aACG4J,EAAQI,OAFZ,IAMH,sBACE5B,IAAKA,EACLiC,YAAa,SAACnI,GACZ6H,GAAQ,EACT,EACDO,aAAc,SAACpI,GACb6H,GAAQ,EACT,EACDhI,UAAU,uBARZ,SAUE,cAAC,IAAD,WAMX,CAEcwI,MA9IC,SAAC,GAAsC,IAApCX,EAAmC,EAAnCA,QAAS5K,EAA0B,EAA1BA,MAAOmD,EAAmB,EAAnBA,aACjC,EAAwBiD,oBAAS,GAAjC,mBAAO0E,EAAP,KAAaC,EAAb,KACM3B,EAAM7B,iBAAO,MACnB,EAA6ChE,qBAAWC,GAAhDuG,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,YAAaE,EAAhC,EAAgCA,SAC1BW,IAAUZ,EAAQa,MAAOb,EAAQa,KAAKzL,GAC5C,OACE,cAAC,IAAM8C,SAAP,UACGiH,EAAUnF,QAAQgG,EAAQxH,IAAM,GAC/B,sBAAKL,UAAS,iCAA4B6H,EAAQJ,MAAlD,WACII,EAAQK,UACPL,EAAQvH,OAASuH,EAAQI,SACxBP,EAAuB7B,SAASgC,EAAQ7J,QAAU8J,IAClD,sBAAK9H,UAAU,wBAAf,UACG6H,EAAQvH,OAAS,gCAAQuH,EAAQvH,QACjCuH,EAAQI,MACP,eAAC,IAAMlI,SAAP,WACE,cAACoI,EAAA,EAAD,CACEC,UAAU,SACVL,KAAMA,EACNpG,OAAQ0E,EAAI5I,QAHd,SAKG,SAACQ,GAAD,OACC,cAACoK,EAAA,EAAD,yBAAShI,GAAE,uBAAkBwH,EAAQxH,KAAUpC,GAA/C,aACG4J,EAAQI,OAFZ,IAMH,sBACE5B,IAAKA,EACLiC,YAAa,SAACnI,GACZ6H,GAAQ,EACT,EACDO,aAAc,SAACpI,GACb6H,GAAQ,EACT,EACDhI,UAAU,uBARZ,SAUE,cAAC,IAAD,YAMM,aAAjB6H,EAAQ7J,MACP,cAAC,EAAD,2BACM6J,GADN,IAEE5K,MAAOA,EACPmD,aAAcA,KAGA,aAAjByH,EAAQ7J,MACP,cAAC2J,EAAD,CACEE,QAASA,EACTD,YAAaA,EACbE,SAAUA,EACV7K,MAAOA,EACPmD,aAAcA,IAGjByH,EAAQc,MACP,sBACE1I,MAAO,CACL2I,QAAS,MACTC,UAAW,SACXC,SAAU,UAJd,UAOE,sCAPF,IAOgBjB,EAAQc,QAGzBF,GACC,sBACExI,MAAO,CACL8I,MAAO,8BACPD,SAAU,UAHd,UAME,cAAC,IAAD,IANF,IAM6BL,SAOxC,ECzEcO,EAjBE,SAAC,GAAuC,IAArCnB,EAAoC,EAApCA,QAASZ,EAA2B,EAA3BA,OAAQ7G,EAAmB,EAAnBA,aAC3B4G,EAAcxG,qBAAWC,GAAzBuG,UACR,OACE,cAAC,IAAMjH,SAAP,UACGiH,EAAUnF,QAAQgG,EAAQxH,IAAM,GAC/B,qCACE,iCAASwH,EAAQvH,QACjB,cAAC,EAAD,CACEgH,SAAUO,EAAQP,SAClBL,OAAQA,EACR7E,SAAUhC,QAMrB,ECfK6I,E,4JACJ,WAAU,IAAD,OACP,OACE,qBAAKjJ,UAAU,6BAAf,SACG4G,KAAK3I,MAAMqJ,SAASxE,KAAI,SAAC+E,GAAD,OACvB,eAAC,IAAM9H,SAAP,WACoB,aAAjB8H,EAAQ7J,MACP,cAAC,EAAD,CACE6J,QAASA,EACTZ,OAAQ,EAAKhJ,MAAMgJ,OACnB7G,aAAc,EAAKnC,MAAMmE,WAGX,aAAjByF,EAAQ7J,MACP,cAAC,EAAD,CACE6J,QAASA,EACT5K,MAAO,EAAKgB,MAAMgJ,OAAOY,EAAQxH,IACjCD,aAAc,EAAKnC,MAAMmE,aAZVyF,EAAQxH,GADN,KAoB9B,K,GAxBwBwG,IAAMC,WA0BjCmC,EAAaC,WAAa,CACxBjC,OAAQkC,IAAUC,QAClB9B,SAAU6B,IAAUE,QAClBF,IAAUC,MAAM,CACd/I,GAAI8I,IAAUG,OAAO9K,WACrB8B,MAAO6I,IAAUG,OACjBtL,KAAMmL,IAAUG,OAAO9K,WACvBiJ,KAAM0B,IAAUI,MAAM,CAAC,KAAM,KAAM,OACnC7F,QAASyF,IAAUE,QACjBF,IAAUC,MAAM,CACdI,IAAKL,IAAUG,OACfrM,MAAOkM,IAAUG,UAGrBtI,UAAWmI,IAAUM,UAAU,CAC7BN,IAAUG,OACVH,IAAUE,QACRF,IAAUM,UAAU,CAACN,IAAUG,OAAQH,IAAUO,QAEnDP,IAAUO,OAEZzB,KAAMkB,IAAUG,UAGpBlH,SAAU+G,IAAUO,MAGPT,Q,gBCnDFxI,EAAgBoG,IAAM8C,eAAc,GAE3CC,E,kDACJ,WAAY3L,GAAQ,IAAD,8BACjB,cAAMA,IAyCR4L,wBAA0B,SAACvC,EAAUL,GAAY,IAAD,IAC9CK,EAAQ,UAAGA,SAAH,oBAAmB,EAAKrJ,MAAMqJ,UACtCL,EAAM,UAAGA,SAAH,uBAAkB,EAAKhJ,MAAMgJ,QACnCK,EAASwC,OAAM,SAACjC,EAAS7E,GAYvB,OAXK6E,EAAQJ,OACXI,EAAQJ,KAAO,MAEbI,EAAQP,UACVO,EAAQP,SAASwC,OAAM,SAACC,GAItB,OAHKA,EAAGtC,OACNsC,EAAGtC,KAAO,OAEL,CACR,KAEI,CACR,IACD,MAAmC,EAAKuC,iCACtC/C,GADMD,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,YAGnB,EAAKqC,SAAS,CACZtJ,SAAS,eAAMsG,GACfiD,iBAAiB,eAAMjD,GACvBK,SAAUA,EACVN,YACAY,eAEH,EArEkB,EAsEnBoC,iCAAmC,SAACrJ,GAAc,IAAD,EAC3C2G,EAAQ,YAAO,EAAKrJ,MAAMqJ,UAC9B3G,EAAQ,UAAGA,SAAH,QAAe,EAAKoC,MAAMpC,SAClC,MAAiC,EAAKoC,MAAhCiE,EAAN,EAAMA,UAAWY,EAAjB,EAAiBA,YACXuC,EAAY,SAACtC,GACjB,IAAMuC,EAASpD,EAAUnF,QAAQgG,EAAQxH,IACvCgK,EAASzC,EAAY/F,QAAQgG,EAAQxH,KdpDtC,SAAqBpC,EAAOuD,GACjC,IAAI8I,GAAO,EACX,GAAIrM,EAAMqM,KACR,GAA0B,oBAAfrM,EAAMqM,KACfA,EAAOrM,EAAMqM,KAAK9I,QACb,GAA0B,mBAAfvD,EAAMqM,KACtBA,EAAOrM,EAAMqM,UACR,GAAoC,WAAhCrM,EAAMqM,KAAKpM,YAAYC,KAEhC,IADA,IAAMG,EAAOD,OAAOC,KAAKL,EAAMqM,MACtB9M,EAAI,EAAGA,EAAIc,EAAKpB,OAAQM,IAAK,CACpC,IAAM+M,EAAUtM,EAAMqM,KAAKhM,EAAKd,IAChC,GAAiC,UAA7B+M,EAAQrM,YAAYC,MACtB,GAAIoM,EAAQ1E,SAASrE,EAAKlD,EAAKd,KAAM,CACnC8M,GAAO,EACP9M,EAAIc,EAAKpB,OACT,KACD,OAED,GAAIqN,IAAY/I,EAAKlD,EAAKd,IAAK,CAC7B8M,GAAO,EACP9M,EAAIc,EAAKpB,OACT,KACD,CAEJ,CAGL,OAAOoN,CACR,CcyBSE,CAAY3C,EAASlH,GAKnByJ,GAAU,GACZpD,EAAUyD,OAAOL,EAAQ,GALvBA,EAAS,GACXpD,EAAU0D,KAAK7C,EAAQxH,KdvF1B,SAAuBpC,EAAOuD,GACnC,IAAImJ,GAAU,EACd,GAAI1M,EAAM0M,SACJ1M,EAAM0M,QACR,GAA6B,oBAAlB1M,EAAM0M,QACfA,EAAU1M,EAAM0M,QAAQnJ,QACnB,GAA6B,mBAAlBvD,EAAM0M,QACtBA,EAAU1M,EAAM0M,aACX,GAAuC,WAAnC1M,EAAM0M,QAAQzM,YAAYC,KAEnC,IADA,IAAMG,EAAOD,OAAOC,KAAKL,EAAM0M,SACtBnN,EAAI,EAAGA,EAAIc,EAAKpB,OAAQM,IAAK,CACpC,IAAM+M,EAAUtM,EAAM0M,QAAQrM,EAAKd,IACnC,GAAiC,UAA7B+M,EAAQrM,YAAYC,MACtB,GAAIoM,EAAQ1E,SAASrE,EAAKlD,EAAKd,KAAM,CACnCmN,GAAU,EACVnN,EAAIc,EAAKpB,OACT,KACD,OAED,GAAIqN,IAAY/I,EAAKlD,EAAKd,IAAK,CAC7BmN,GAAU,EACVnN,EAAIc,EAAKpB,OACT,KACD,CAEJ,CAIP,OAAOyN,CACR,CcgESC,CAAc/C,EAASlH,GAKrB0J,GAAU,GACZzC,EAAY6C,OAAOL,EAAQ,GALzBC,EAAS,GACXzC,EAAY8C,KAAK7C,EAAQxH,GAO9B,EAoBD,OAnBAiH,EAASwC,OAAM,SAACjC,EAAS7E,GAEvB,GADAmH,EAAUtC,GACW,aAAjBA,EAAQ7J,KAAqB,CAC/B,IAAM6M,EAAiB7D,EAAUnF,QAAQgG,EAAQxH,KAAO,EACxDwH,EAAQP,SAASwC,OAAM,SAACC,GACtB,GAAIc,EACF7D,EAAUnF,QAAQkI,EAAG1J,IAAM,GAAK2G,EAAU0D,KAAKX,EAAG1J,QAC7C,CACL,IAAMyK,EAAK9D,EAAUnF,QAAQkI,EAAG1J,IAChCyK,GAAM,GAAK9D,EAAUyD,OAAOK,EAAI,GAC5Bf,EAAGO,MACLH,EAAUJ,EAEb,CACD,OAAO,CACR,GACF,CACD,OAAO,CACR,IACM,CACL/C,YACAY,cAEH,EAvHkB,EAyHnBmD,gBAAkB,SAAC1K,EAAIpD,EAAO2D,GAC5B,IAAID,EAAW,EAAKoC,MAAMpC,SAC1BA,EAASN,GAAMpD,EACf,MAAmC,EAAK+M,mCAAhChD,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,YACnB,EAAiE,EAAK7E,MAA9DmH,EAAR,EAAQA,iBAAkBc,EAA1B,EAA0BA,gBAAiBtK,EAA3C,EAA2CA,kBACrCuK,EAAQD,EAAgBnJ,QAAQxB,GAClCpD,IAAUiN,EAAiB7J,GACzB4K,GAAS,GACXD,EAAgBP,OAAOQ,EAAO,GAG5BA,EAAQ,GACVD,EAAgBN,KAAKrK,GAGrBO,GACGF,EAAkBxB,eAAemB,KACpCK,EAAkBL,GAAM,IAE1BK,EAAkBL,GAAMO,GAEpBF,EAAkBxB,eAAemB,WAC5BK,EAAkBL,GAI7B,EAAK4J,SAAS,CACZtJ,WACAqK,kBACAtK,oBACAsG,YACAY,gBAEE,EAAK3J,MAAMiN,YACb,EAAKC,4BAA4BxK,EAEpC,EA7JkB,EA8JnByK,WAAa,SAACjL,GACZA,EAAEkL,iBACFlL,EAAEmL,kBACF,EAAKH,6BACN,EAlKkB,EAmKnBA,4BAA8B,SAACI,GAC7B,GAAyD,IAArDlN,OAAOC,KAAK,EAAKyE,MAAMrC,mBAAmBxD,OAAc,CAAC,IAAD,IACtDyD,EAAQ,sBAAS4K,QAAT,IAASA,IAAY,EAAKxI,MAAMpC,UADc,cAE3C,EAAKoC,MAAMiE,WAFgC,IAE1D,2BAAqC,QAC5BrG,EAD4B,QAEpC,CAJyD,+BAK1D,EAAKsJ,SAAS,CACZuB,iBAAiB,IAEnB,EAAKvN,MAAMwN,cAAX,UAAyB,EAAKxN,MAAMoC,UAApC,QAA0CM,EAASN,GAAIM,EACxD,MACC,EAAKsJ,SAAS,CACZyB,qBACE,2DAGP,EAnLkB,EAoLnBC,UAAY,WACV,EAAK1B,SAAS,CACZtJ,SAAS,eAAM,EAAKoC,MAAMmH,kBAC1BsB,iBAAiB,EACjB9K,kBAAmB,CAAC,EACpBsK,gBAAiB,IAEpB,EAzLC,EAAKjI,MAAQ,CACXiI,gBAAiB,GACjBtK,kBAAmB,CAAC,EACpBwJ,iBAAkB,CAAC,EACnBvJ,SAAU,CAAC,EACX6K,iBAAiB,EACjBlE,SAAU,GACVN,UAAW,GACXY,YAAa,IAVE,CAYlB,C,qDACD,WACEhB,KAAKiD,yBACN,G,gCACD,SAAmB+B,GdsEd,IAAwBC,EAAIC,EcpE7BlF,KAAK3I,MAAM8N,MAAMC,oBACfJ,EAAUG,MAAMC,mBAClBpF,KAAK3I,MAAM8N,MAAME,kBAAoBL,EAAUG,MAAME,kBAGnDrF,KAAK3I,MAAM8N,MAAMC,mBACjBpF,KAAK3I,MAAM8N,MAAME,gBAEjBrF,KAAKqD,SAAS,CAAEuB,iBAAiB,IAEjC5E,KAAKqD,SAAS,CAAEuB,iBAAiB,MAKlCI,EAAU3E,SAAWL,KAAK3I,MAAMgJ,SAC/B2E,EAAU3E,QAAUL,KAAK3I,MAAMgJ,QAChC2E,EAAU3E,QACTL,KAAK3I,MAAMgJ,SdkDY4E,EcjDPD,EAAU3E,OdiDC6E,EcjDOlF,KAAK3I,MAAMgJ,QdmDjD5I,OAAOC,KAAKuN,GAAI/B,OACd,SAACN,GAAD,OAASsC,EAAG5M,eAAesK,IAAQqC,EAAGrC,KAASsC,EAAGtC,EAAlD,MAEFnL,OAAOC,KAAKwN,GAAIhC,OACd,SAACN,GAAD,OAASqC,EAAG3M,eAAesK,IAAQqC,EAAGrC,KAASsC,EAAGtC,EAAlD,OcrDA5C,KAAKiD,yBAER,G,oBAmJD,WAAU,IAAD,OACHqC,EAAc,WAOlB,OANItF,KAAK3I,MAAMkO,UACbD,GAAe,aAEbtF,KAAK3I,MAAMmO,kBACbF,GAAe,aAGf,uBAAMlM,UAAWkM,EAAajM,MAAO2G,KAAK3I,MAAMgC,MAAhD,WACI2G,KAAK3I,MAAM8N,MAAMM,OAASzF,KAAK3I,MAAM8N,MAAMO,cAC3C,sBAAKtM,UAAU,iBAAf,UACG4G,KAAK3I,MAAM8N,MAAMM,OAChB,qBAAKrM,UAAU,uBAAf,SACG4G,KAAK3I,MAAM8N,MAAMM,QAGrBzF,KAAK3I,MAAM8N,MAAMO,aAChB,mBAAGtM,UAAU,sBAAb,SACG4G,KAAK3I,MAAM8N,MAAMO,iBAM1B,cAAC7L,EAAc8L,SAAf,CACEtP,MAAO,CACL6K,SAAUlB,KAAK3I,MAAM6J,SACrBpH,kBAAmBkG,KAAK7D,MAAMrC,kBAC9BkH,YAAahB,KAAK7D,MAAM6E,YACxBZ,UAAWJ,KAAK7D,MAAMiE,UACtBrG,SAAUiG,KAAK7D,MAAMpC,UANzB,SASE,cAAC,EAAD,CACE2G,SAAUV,KAAK7D,MAAMuE,SACrBlF,SAAUwE,KAAKmE,gBACf9D,OAAQL,KAAK7D,MAAMpC,eAIpBiG,KAAK3I,MAAMiN,YAActE,KAAK3I,MAAM6J,WACrC,sBAAK9H,UAAU,iBAAf,UACE,qBAAKA,UAAU,4BACf,sBAAKA,UAAU,kBAAf,UACE,eAACiD,EAAA,EAAD,CACEC,QAAQ,eACRlD,UAAU,uBACVE,QAAS,SAACC,GAAD,OAAO,EAAKwL,WAAZ,EAHX,UAKE,cAAC,IAAD,IALF,YAOA,eAAC1I,EAAA,EAAD,CACEC,QAAQ,WACRhD,QAAS0G,KAAKwE,WACdpL,UAAS,+BACP4G,KAAK3I,MAAMmO,gBAAkB,aAAe,IAJhD,UAOE,cAAC,IAAD,IAPF,qBAcX,K,GA/PkBvF,IAAMC,WA4SZD,MAAM2F,KAAK5C,G,MChTX,SAAS6C,KACpB,MAA4BpJ,mBAAS,CACjCqJ,WAAY,WACZC,YAAa,KACbC,UAAW,GACXC,IAAK,GACLC,KAAM,gBAENC,QAAS,GACTC,KAAM,GACNjK,MAAO,GACPkK,QAAS,GACTC,IAAK,GACLC,OAAO,EACPC,UAAU,EACVC,IAAK,GACLC,SAAU,EACVC,GAAI,CAAC,EAAG,EAAG,GACXC,IAAK,WAjBT,mBAAOvG,EAAP,KAAewG,EAAf,KAmBA,EAA0BpK,oBAAS,GAAnC,mBAAOqK,EAAP,KACMpG,GADN,KACiB,CACb,CACIjH,GAAI,MACJC,MAAO,SACPtC,KAAM,QACNyJ,KAAM,KACNQ,KAAM,iBACNvE,QAAS,CACL,CACIE,KAAM,OACN3G,MAAO,QAEX,CACI2G,KAAM,SACN3G,MAAO,YAInB,CACIoD,GAAI,KACJC,MAAO,WACPtC,KAAM,WACNyJ,KAAM,KACNH,SAAU,CACN,CACItJ,KAAM,SACNyJ,KAAM,MAEV,CACIzJ,KAAM,SACNyJ,KAAM,MAEV,CACIzJ,KAAM,SACNyJ,KAAM,QAIlB,CACIpH,GAAI,WACJC,MAAO,WACPtC,KAAM,SACNyJ,KAAM,KACNQ,KAAM,mBACNhI,MAAO,CAAE0N,UAAW,QACpBhF,KAAM,mBAEV,CACItI,GAAI,MACJC,MAAO,WACPtC,KAAM,WACNyJ,KAAM,MAEV,CACIpH,GAAI,WACJC,MAAO,QACPtC,KAAM,aACNyJ,KAAM,KACNvE,QAAS,UACTL,OAAQ,CACJ,CACI5F,MAAO,EACPkG,QAAS,SAEb,CACIlG,MAAO,EACPkG,QAAS,UAEb,CACIlG,MAAO,EACPkG,QAAS,SAIrB,CACI9C,GAAI,eACJC,MAAO,QACPtC,KAAM,WACNsJ,SAAU,CACN,CACIjH,GAAI,aACJC,MAAO,aACPtC,KAAM,OACNyJ,KAAM,MAEV,CACIpH,GAAI,cACJC,MAAO,cACPtC,KAAM,OACNyJ,KAAM,MAEV,CACIpH,GAAI,YACJC,MAAO,YACPtC,KAAM,OACNyJ,KAAM,MAEV,CACIpH,GAAI,SACJC,MAAO,SACPtC,KAAM,SACNyJ,KAAM,KACN/D,QAAS,CACL,CACIE,KAAM,OACN3G,MAAO,QAEX,CACI2G,KAAM,SACN3G,MAAO,cAM3B,CACIoD,GAAI,QACJC,MAAO,iCACPtC,KAAM,WACNyJ,KAAM,KACNQ,KAAM,qBACNU,KAAM,mCACND,KAAM,SAAAhH,GACF,GAAIA,EACA,MAAO,iBAEd,GAEL,CACIrB,GAAI,SACJC,MAAO,iCACPtC,KAAM,WACNyJ,KAAM,KACNQ,KAAM,qBACNU,KAAM,mCACND,KAAM,SAAAhH,GACF,GAAIA,EACA,MAAO,iBAEd,GAEL,CACIrB,GAAI,UACJC,MAAO,iCACPtC,KAAM,WACNyJ,KAAM,KACNQ,KAAM,qBACNU,KAAM,mCACND,KAAM,SAAAhH,GACF,GAAIA,EACA,MAAO,iBAEd,GAEL,CACIrB,GAAI,kBACJC,MAAO,UACPtC,KAAM,WACNsM,KAAM,CAAE6C,OAAO,GACf7F,SAAU,CACN,CACIjH,GAAI,UACJrC,KAAM,UACNsC,MAAO,UACP2H,KAAM,oCACNR,KAAM,MAEV,CACIpH,GAAI,OACJrC,KAAM,OACNsC,MAAO,OACPmH,KAAM,MAEV,CACIpH,GAAI,QACJrC,KAAM,OACNsC,MAAO,QACPmH,KAAM,MAEV,CACIpH,GAAI,UACJrC,KAAM,OACNsC,MAAO,UACPmH,KAAM,KACNzG,UAAW,CAwB3B,SAAyB/D,GACrB,GAAIA,EAAMC,OAAS,EACf,MAAO,CACHE,YAAY,EACZC,QAAS,4BAGjB,MAAO,CAAED,YAAY,EACxB,IA9BW,CACIiD,GAAI,MACJrC,KAAM,SACNsC,MAAO,MACPmH,KAAM,QAIlB,CACIpH,GAAI,OACJrC,KAAM,WACNsC,MAAO,WACPmH,KAAM,KACNjB,QAAS,QAEb,CACInG,GAAI,OACJrC,KAAM,SACN6C,UAAW+M,GACXtN,MAAO,iBAsBf,OACI,qBAAKN,UAAU,MAAf,SACI,cAAC,EAAD,CACIsH,SAAUA,EACVyE,MAdE,CACVM,MAAO,mBACPL,kBAAmB,oBACnBC,gBAAiB,kBACjBK,YAAa,6DAWLb,cATU,SAACpL,EAAImB,GACvBiM,EAAUjM,EAEb,EAOWyF,OAAQA,EACRmF,gBAAiBsB,KAIhC,CAED,IAAME,GAAK,SAAA3P,GACP,OAAO,cAACgF,EAAA,EAAD,CAAQC,QAAQ,UAAhB,mCACV,ECvQK2K,GAAc7I,SAAS8I,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvB,GAAD,MAEFoB,G","file":"static/js/main.6816b8a9.chunk.js","sourcesContent":["function validateFormElement(type, value, props) {\n  if (type.constructor.name === \"Function\") {\n    return type(value);\n  } else if (type === \"isRequired\") {\n    return isRequired(value);\n  } else if (type === \"email\") {\n    return emailvalidator(value);\n  } else if (type === \"number\") {\n    return numberValidator(value);\n  } else if (type === \"decimal\") {\n    return decimalValidator(value);\n  } else if (type === \"length\") {\n    return stringLengthValidator(value, props.minLength, props.maxLength);\n  } else if (type === \"password\") {\n    return passwordValidator(value);\n  } else if (type === \"ipaddress\") {\n    return ipAddressValidator(value);\n  } else if (type === \"ipaddresslist\") {\n    return ipAddressListValidator(value);\n  } else if (type === \"domain\") {\n    return domainValidator(value);\n  } else if (type === \"domainlist\") {\n    return domainListValidator(value);\n  } else if (type === \"domainAllowAll\") {\n    return domainValidator(value, true);\n  } else if (type === \"domainListAllowAll\") {\n    return domainListValidator(value, true);\n  } else if (type === \"uniquelist\") {\n    return uniqueListValidator(value);\n  } else if (type === \"subnetmask\") {\n    return subnetMaskValidator(value);\n  } else if (type === \"domainOrIp\") {\n    return domainOrIpValidator(value);\n  } else if (type === \"domainOrIpList\") {\n    return domainOrIpListValidator(value);\n  } else if (type === \"numRange\") {\n    return validateNumRange(value, props.min, props.max);\n  } else if (type === \"word\") {\n    return wordValidator(value);\n  } else if (type === \"shortdomain\") {\n    return shortDomainNameValidator(value);\n  } else if (type === \"username\") {\n    return usernameValidator(value);\n  }\n}\n\nfunction uniqueListValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return { validation: true };\n  }\n  let counter = {};\n  let validation = { validation: true };\n  for (let i = 0; i < value.length; i++) {\n    if (counter.hasOwnProperty(value[i])) {\n      validation[\"validation\"] = false;\n      validation[\"message\"] = value[i] + \" is a duplicate.\";\n    } else {\n      counter[value[i]] = 1;\n    }\n  }\n  return validation;\n}\n\nfunction ipAddressListValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  for (let i = 0; i < value.length; i++) {\n    let current = value[i];\n    let validation = ipAddressValidator(current);\n    if (validation.validation === false) {\n      i = value.length;\n      return {\n        validation: false,\n        message: \"Invalid list of IPAddresses, Invalid value: \" + current\n      };\n    }\n  }\n  return {\n    validation: true\n  };\n}\nfunction ipAddressValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (\n    /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n      value\n    )\n  ) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid IP address\"\n    };\n  }\n}\nfunction domainListValidator(value, allowAll) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  for (let i = 0; i < value.length; i++) {\n    let current = value[i];\n    let validation = domainValidator(current, allowAll);\n    if (validation.validation === false) {\n      i = value.length;\n      return {\n        validation: false,\n        message: \"Invalid list of domain, Invalid value: \" + current\n      };\n    }\n  }\n  return {\n    validation: true\n  };\n}\nfunction domainValidator(value, allowAll) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (value.length > 64) {\n    return {\n      validation: false,\n      message: \"Invalid Domain\"\n    };\n  }\n  let regex;\n  if (allowAll) {\n    regex = /(((?:(?:(?:\\w[.\\-+]?)*)\\w)+)|[*]{1}[.]{1})(((?:(?:(?:\\w[.\\-+]?){0,62})\\w)+)\\.(\\w{2,6}))*$/g;\n  } else {\n    regex = /^((?:(?:(?:\\w[.\\-+]?)*)\\w)+)((?:(?:(?:\\w[.\\-+]?){0,62})\\w)+)\\.(\\w{2,6})$/g;\n  }\n  if (regex.test(value)) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid Domain\"\n    };\n  }\n}\n\nfunction passwordValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (/^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(value)) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: `Password must be atlease 8 characters containing atleast one letter, a number, \n          and a special symbol. Allowed special symbols are #, ?, !, @, $, %, ^, &, *, -`\n    };\n  }\n}\n\nfunction stringLengthValidator(value, minLength, maxLength) {\n  /* Empty string validation */\n  if (\n    (typeof minLength !== \"undefined\") &\n    (minLength === 0) &\n    (typeof value !== \"undefined\") &\n    (value === null || value.length === 0)\n  ) {\n    return { validation: true };\n  }\n  if (typeof maxLength !== \"undefined\") {\n    if (value && value.length >= minLength && value.length <= maxLength) {\n      return { validation: true };\n    } else {\n      return {\n        validation: false,\n        message:\n          \"Length should be at least \" +\n          minLength +\n          \" and less than \" +\n          maxLength\n      };\n    }\n  }\n  return (value & value.length) >= minLength\n    ? { validation: true }\n    : {\n        validation: false,\n        message: \"Insufficient length. Length should be at least \" + minLength\n      };\n}\n\nfunction decimalValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (/^[0-9]+.[0-9]+$/.test(value)) {\n    return {\n      validation: true\n    };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid number\"\n    };\n  }\n}\n\nfunction numberValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (/^[0-9]+$/.test(value)) {\n    return {\n      validation: true\n    };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid number\"\n    };\n  }\n}\n\nfunction isRequired(value) {\n  if (value && value.constructor.name === \"Array\") {\n    if (\n      (typeof value !== \"undefined\") &\n      (value === null || value.length === 0)\n    ) {\n      return {\n        validation: false,\n        message: \"Empty value is not allowed for required component\"\n      };\n    } else {\n      if (value.length === 1 && value[0].trim().length === 0) {\n        return {\n          validation: false,\n          message: \"Empty value is not allowed for required component\"\n        };\n      }\n      return {\n        validation: true\n      };\n    }\n  } else if (value && value.constructor.name === \"Object\") {\n    if (Object.keys(value).length === 0) {\n      return {\n        validation: false,\n        message: \"Empty value is not allowed for required component\"\n      };\n    } else {\n      return {\n        validation: true\n      };\n    }\n  } else {\n    if (value) {\n      if (value.toString().length > 0) {\n        return {\n          validation: true\n        };\n      } else {\n        return {\n          validation: false,\n          message: \"Empty value is not allowed for required component\"\n        };\n      }\n    } else {\n      return {\n        validation: false,\n        message: \"Empty value is not allowed for required component\"\n      };\n    }\n  }\n}\n\nfunction emailvalidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      value\n    )\n  ) {\n    return {\n      validation: true\n    };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid email address\"\n    };\n  }\n}\n\nfunction subnetMaskValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return { validation: true };\n  }\n  if (\n    /^(((255\\.){3}(255|254|252|248|240|224|192|128|0+))|((255\\.){2}(255|254|252|248|240|224|192|128|0+)\\.0)|((255\\.)(255|254|252|248|240|224|192|128|0+)(\\.0+){2})|((255|254|252|248|240|224|192|128|0+)(\\.0+){3}))$/.test(\n      value\n    )\n  ) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: \"Invalid Subnet mask.\"\n    };\n  }\n}\n\nfunction domainOrIpValidator(value) {\n  const domainValidation = domainValidator(value);\n  const ipAddressValidation = ipAddressValidator(value);\n\n  if (!domainValidation.validation && !ipAddressValidation.validation) {\n    return {\n      validation: false,\n      message: \"Value should be either a domain or an IPv4 address.\"\n    };\n  }\n  return { validation: true };\n}\n\nfunction domainOrIpListValidator(value) {\n  if (\n    (typeof value !== \"undefined\") & (value.length === 0) ||\n    value === null ||\n    (value.length === 1 && value[0].trim() === \"\")\n  ) {\n    return {\n      validation: true\n    };\n  }\n  for (let i = 0; i < value.length; i++) {\n    let current = value[i];\n    let validation = domainOrIpValidator(current);\n    if (validation.validation === false) {\n      i = value.length;\n      return {\n        validation: false,\n        message:\n          \"Value should be either a domain or an IPv4 address. Invalid entry: \" +\n          current\n      };\n    }\n  }\n  return {\n    validation: true\n  };\n}\n\nfunction validateNumRange(value, min, max) {\n  if (parseInt(value) >= parseInt(min) && parseInt(value) <= parseInt(max)) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: \"Value must be in the range of \" + min + \"-\" + max\n    };\n  }\n}\n\nfunction wordValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (/^[a-zA-Z0-9-_]*$/.test(value)) {\n    return { validation: true };\n  } else {\n    return {\n      validation: false,\n      message: \"Value must contain only a letter, number, underscore or hyphen\"\n    };\n  }\n}\n\nfunction shortDomainNameValidator(value) {\n  if ((typeof value !== \"undefined\") & (value === null || value.length === 0)) {\n    return {\n      validation: true\n    };\n  }\n  if (value.length > 15) {\n    return {\n      validation: false,\n      message: \"Short domain name must be 15 characters or less\"\n    };\n  }\n  if (value.split(\"\")[0] === \".\") {\n    return {\n      validation: false,\n      message: 'Short domain name must not starts with \".\"'\n    };\n  }\n  if (/[|:?*\".<>\\\\/]{1,15}/.test(value)) {\n    return {\n      validation: false,\n      message:\n        'Short domain name must not have special characters among \" |, :, ?, ., *,/,\\\\,\", <,>  \"'\n    };\n  }\n  if (parseInt(value).toString() === value) {\n    return {\n      validation: false,\n      message: \"Short domain name must not be only numbers\"\n    };\n  }\n  if (/[a-zA-Z0-9]/.test(value)) {\n    return {\n      validation: true\n    };\n  }\n  return {\n    validation: false,\n    message:\n      'short domain name must not be completely of number, and have special characters among \" |, :, ?, *,/,\\\\,\", <,>  \"'\n  };\n}\n\nfunction usernameValidator(value) {\n  if (/^[a-z0-9_\\-]+$/.test(value)) {\n    return {\n      validation: true\n    };\n  } else {\n    return {\n      validation: false,\n      message:\n        \"An username must contains only lowercase letters, number, underscore, and hyphen\"\n    };\n  }\n}\n\nmodule.exports = validateFormElement;\n","import React from \"react\";\n\nconst Checkbox = (props) => {\n  return (\n    <React.Fragment>\n      <label className=\"adform-checkbox-container\" style={props.style}>\n        <span\n          className={`checkbox ${props.value ? \"checked\" : \"\"}`}\n          onClick={(e) => {\n            props.handleChange(props.id, !props.value);\n          }}\n        ></span>{\" \"}\n        {props.label}\n      </label>\n    </React.Fragment>\n  );\n};\n\nexport default Checkbox;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AdFormContext } from \"../adform\";\n\nconst Custom = (props) => {\n  const { controlsWithError, formData } = useContext(AdFormContext);\n  const error = controlsWithError[props.id] || false;\n  return (\n    <div className=\"ad-form-custom-control\" style={props.style}>\n      <div className=\"ad-form-custom-control-content\">\n        <props.component {...props} formData={formData} />\n      </div>\n      {error && <div className=\"ad-form-control-error\">{error}</div>}\n    </div>\n  );\n};\n\nCustom.propTypes = {\n  id: PropTypes.string.isRequired,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  attributes: PropTypes.shape()\n};\n\nexport default Custom;\n","import validateFormElement from \"../validator\";\n\nexport function checkDisabled(props, data) {\n  let disable = false;\n  if (props.disable) {\n    if (props.disable) {\n      if (typeof props.disable === \"function\") {\n        disable = props.disable(data);\n      } else if (typeof props.disable === \"boolean\") {\n        disable = props.disable;\n      } else if (props.disable.constructor.name === \"Object\") {\n        const keys = Object.keys(props.disable);\n        for (let i = 0; i < keys.length; i++) {\n          const tempVal = props.disable[keys[i]];\n          if (tempVal.constructor.name === \"Array\") {\n            if (tempVal.includes(data[keys[i]])) {\n              disable = true;\n              i = keys.length;\n              break;\n            }\n          } else {\n            if (tempVal === data[keys[i]]) {\n              disable = true;\n              i = keys.length;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  return disable;\n}\n\nexport function checkHidden(props, data) {\n  let hide = false;\n  if (props.hide) {\n    if (typeof props.hide === \"function\") {\n      hide = props.hide(data);\n    } else if (typeof props.hide === \"boolean\") {\n      hide = props.hide;\n    } else if (props.hide.constructor.name === \"Object\") {\n      const keys = Object.keys(props.hide);\n      for (let i = 0; i < keys.length; i++) {\n        const tempVal = props.hide[keys[i]];\n        if (tempVal.constructor.name === \"Array\") {\n          if (tempVal.includes(data[keys[i]])) {\n            hide = true;\n            i = keys.length;\n            break;\n          }\n        } else {\n          if (tempVal === data[keys[i]]) {\n            hide = true;\n            i = keys.length;\n            break;\n          }\n        }\n      }\n    }\n  }\n  return hide;\n}\n\nexport function validateControl(value, properties, formData) {\n  let error = false;\n  const validator = properties.validator;\n  if (!validator) {\n    return false;\n  }\n  if (validator.constructor.name === \"Array\") {\n    for (let i = 0; i < validator.length; i++) {\n      const currentValidator = validator[i];\n      let tempError = undefined;\n      if (typeof currentValidator === \"function\") {\n        tempError = currentValidator(value, formData);\n      } else if (typeof currentValidator === \"string\") {\n        validateFormElement(currentValidator, value, properties);\n      }\n      if (!tempError.validation) {\n        error = tempError.message;\n        break;\n      } else {\n        if (i === validator.length - 1) {\n          error = false;\n        }\n      }\n    }\n  } else if (typeof validator === \"function\") {\n    error = validator(value, formData);\n  } else if (typeof validator === \"string\") {\n    validateFormElement(validator, value, properties);\n  }\n  return error;\n}\n\nexport function isShallowEqual(o1, o2) {\n  return (\n    Object.keys(o1).every(\n      (key) => o2.hasOwnProperty(key) && o1[key] === o2[key]\n    ) &&\n    Object.keys(o2).every(\n      (key) => o1.hasOwnProperty(key) && o1[key] === o2[key]\n    )\n  );\n}\n","import React, { useCallback, useContext } from \"react\";\nimport { AdFormContext } from \"../adform\";\nimport { debounce } from \"lodash\";\nimport { validateControl } from \"../form_utils\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\n\nconst Input = (props) => {\n  const { controlsWithError, formData } = useContext(AdFormContext);\n  const error = controlsWithError[props.id] || false;\n  const debounceFn = debounce((value, properties, data) => {\n    const error = validateControl(value, properties, data);\n    if (error) {\n      properties.handleChange(properties.id, value, error);\n    }\n  }, 400);\n  const handleChange = useCallback(function (e) {\n    let val = e.target.value;\n    if (props.type === \"number\") {\n      val = parseInt(val, 10);\n    } else if (props.type === \"float\") {\n      val = parseFloat(val);\n    }\n    props.handleChange(props.id, val);\n    debounceFn(val, props, formData);\n  }, []);\n  const isRequired = props.validator\n    ? typeof props.validator === \"string\"\n      ? props.validator === \"isRequired\"\n      : props.validator.indexOf(\"isRequired\") > -1\n    : false;\n  return (\n    <React.Fragment>\n      <InputGroup>\n        {props.prepend && (\n          <InputGroup.Prepend>\n            <InputGroup.Text id={`prepend-for-${props.id}`}>\n              {props.prepend}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n        )}\n        <FormControl\n          className={`ad-form-control-input ${error ? \"has-error\" : \"\"}`}\n          value={props.value}\n          type={props.type}\n          controlid={props.id}\n          onChange={handleChange}\n          placeholder={`${isRequired ? \"\" : \"(Optional)\"} ${\n            props.placeholder ?? `Enter ${props.label}`\n          }`}\n          isInvalid={error ? true : false}\n        />\n        {props.append && (\n          <InputGroup.Append>\n            <InputGroup.Text id={`append-for-${props.id}`}>\n              {props.append}\n            </InputGroup.Text>\n          </InputGroup.Append>\n        )}\n      </InputGroup>\n      {error && <div className=\"ad-form-control-error\">{error}</div>}\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\nconst Multistate = (props) => {\n  return (\n    <React.Fragment>\n      <ButtonGroup style={{ cursor: \"pointer\", marginRight: \"0.5rem\" }}>\n        {props.states.map((state, index) => (\n          <Button\n            key={index}\n            variant={\n              props.value === state.value\n                ? `${props.variant ? props.variant : \"soothing-blue\"}`\n                : `outline-${props.variant ? props.variant : \"soothing-blue\"}`\n            }\n            onClick={(e) => {\n              props.handleChange(props.id, state.value);\n            }}\n          >\n            {state.display}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </React.Fragment>\n  );\n};\n\nexport default Multistate;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { AdFormContext } from \"../adform\";\nimport { debounce } from \"lodash\";\nimport { validateControl } from \"../form_utils\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\nimport { RiEyeCloseLine, RiEyeLine } from \"react-icons/ri\";\n\nconst Password = (props) => {\n  const { controlsWithError, formData } = useContext(AdFormContext);\n  const error = controlsWithError[props.id] || false;\n  const debounceFn = debounce((value, properties, data) => {\n    const error = validateControl(value, properties, data);\n    if (error) {\n      properties.handleChange(properties.id, value, error);\n    }\n  }, 400);\n  const handleChange = useCallback(function (e) {\n    let val = e.target.value;\n    props.handleChange(props.id, val);\n    debounceFn(val, props, formData);\n  }, []);\n  const isRequired = props.validator\n    ? typeof props.validator === \"string\"\n      ? props.validator === \"isRequired\"\n      : props.validator.indexOf(\"isRequired\") > -1\n    : false;\n\n  const [showPwd, setShowPwd] = useState(false);\n  return (\n    <React.Fragment>\n      <InputGroup>\n        {props.prepend && (\n          <InputGroup.Prepend>\n            <InputGroup.Text id={`prepend-for-${props.id}`}>\n              {props.prepend}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n        )}\n        <FormControl\n          className={`ad-form-control-input ${error ? \"has-error\" : \"\"}`}\n          value={props.value}\n          type={`${showPwd ? \"text\" : \"password\"}`}\n          controlid={props.id}\n          onChange={handleChange}\n          placeholder={`${isRequired ? \"\" : \"(Optional)\"} ${\n            props.placeholder ?? `Enter ${props.label}`\n          }`}\n          isInvalid={error ? true : false}\n        />\n\n        <InputGroup.Append\n          style={{ cursor: \"pointer\" }}\n          onClick={(e) => {\n            setShowPwd((prev) => !prev);\n          }}\n        >\n          <InputGroup.Text>\n            {showPwd && <RiEyeLine />}\n            {!showPwd && <RiEyeCloseLine />}\n          </InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n      {error && <div className=\"ad-form-control-error\">{error}</div>}\n    </React.Fragment>\n  );\n};\n\nexport default Password;\n","import React from \"react\";\n\nconst Radio = (props) => {\n  return (\n    <React.Fragment>\n      <label className=\"adform-radio-container\" style={props.style}>\n        {props.options.map((opt) => (\n          <div key={opt.value} className=\"adform-single-radio-wrapper\">\n            <span\n              className={`radio ${props.value === opt.value ? \"checked\" : \"\"}`}\n              onClick={(e) => {\n                props.handleChange(props.id, opt.value);\n              }}\n            ></span>{\" \"}\n            {opt.text}\n          </div>\n        ))}\n      </label>\n    </React.Fragment>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ReadOnly = (props) => {\n  const setVal = () => {\n    let val = props.value;\n    const type = props.type;\n    if (type === \"checkbox\") {\n      val = val ? \"True\" : \"False\";\n    } else if (type === \"select\") {\n      let valToText = {};\n      for (let opt of props.options) {\n        valToText[opt.value.toString()] = opt.text;\n      }\n      val = valToText[val];\n    }\n\n    return val;\n  };\n  const val = setVal();\n  return (\n    <React.Fragment>\n      {props.target && (\n        <Link\n          className=\"readonly-control\"\n          to={props.value ? props.target : \"#\"}\n        >\n          {val ? val : <i>NA</i>}\n        </Link>\n      )}\n      {!props.target && (\n        <span className=\"readonly-control\" style={props.style}>\n          {val ? val : <i>NA</i>}\n        </span>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ReadOnly;\n","import React, { useContext, useEffect, useState, useMemo, useRef } from \"react\";\nimport { AdFormContext } from \"../adform\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\nimport { debounce } from \"lodash\";\n\nconst Select = (props) => {\n  const [showOptions, setShowOption] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const valBoxRef = useRef(null);\n  const optionsBoxRef = useRef(null);\n  const [style, setStyle] = useState({ height: \"0px\" });\n  useEffect(() => {\n    window.addEventListener(\"click\", handleClickOutside);\n    document.addEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"resize\", handleScroll);\n    setOptions(props.options);\n    return () => {\n      window.removeEventListener(\"click\", handleClickOutside);\n      document.removeEventListener(\"scroll\", handleScroll);\n      window.removeEventListener(\"resize\", handleScroll);\n    };\n  }, []);\n  const valText = useMemo(() => {\n    let op = {};\n    for (let opt of props.options) {\n      op[opt.value.toString()] = opt.text;\n    }\n    return op;\n  }, [props.options]);\n  function handleClickOutside(e) {\n    const target = e.target;\n    if (\n      !target.closest(`div.ad-form-select-options[data-for=${props.id}]`) &&\n      !target.closest(`div.ad-form-select-val[data-for=${props.id}]`)\n    ) {\n      setShowOption(false);\n    }\n  }\n  const { controlsWithError } = useContext(AdFormContext);\n  const error = controlsWithError[props.id] || false;\n  const debounceFn = debounce((val, optFltFn) => {\n    optFltFn(val);\n  }, 400);\n  function filterOptions(str) {\n    let op = [...props.options];\n    if (str.trim().length > 0) {\n      op = op.filter((item) =>\n        item.text.toLowerCase().includes(str.toLowerCase())\n      );\n    }\n    setOptions(op);\n  }\n  function setSearching(e) {\n    const val = e.target.value;\n    setSearch(val);\n    debounceFn(val, filterOptions);\n  }\n  function toggleShowOption(e) {\n    if (!showOptions) {\n      setOptionCss();\n    }\n    setShowOption((prevState) => !prevState);\n  }\n  function setOptionCss() {\n    const valEleRect = valBoxRef.current.getBoundingClientRect(),\n      top = valEleRect.top + valEleRect.height;\n\n    setStyle({\n      top: top,\n      width: valEleRect.width,\n      left: valEleRect.left\n    });\n  }\n  function handleScroll() {\n    if (getComputedStyle(optionsBoxRef.current).display !== \"none\") {\n      setOptionCss();\n    }\n  }\n  return (\n    <React.Fragment>\n      <InputGroup>\n        {props.prepend && (\n          <InputGroup.Prepend>\n            <InputGroup.Text id={`prepend-for-${props.id}`}>\n              {props.prepend}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n        )}\n        <div className=\"ad-form-select\">\n          <div\n            className={`ad-form-select-val ${showOptions ? \"active\" : \"\"}`}\n            data-for={props.id}\n            ref={valBoxRef}\n            onClick={toggleShowOption}\n          >\n            {props.value ? valText[props.value] : `-- Select ${props.label} --`}\n          </div>\n          <div\n            className={`ad-form-select-options ${showOptions ? \"show\" : \"\"}`}\n            style={style}\n            data-for={props.id}\n            ref={optionsBoxRef}\n          >\n            <FormControl\n              type=\"text\"\n              className=\"ad-form-select-search\"\n              value={search}\n              onChange={setSearching}\n              placeholder=\"Search options\"\n            />\n            {options.map((opt) => (\n              <div\n                key={`${opt.value}`}\n                className={`ad-form-select-option ${\n                  props.value === opt.value ? \"selected\" : \"\"\n                }`}\n                onClick={(e) => {\n                  if (props.value !== opt.value) {\n                    props.handleChange(props.id, opt.value);\n                    setShowOption(false);\n                  }\n                }}\n              >\n                {opt.text}\n              </div>\n            ))}\n          </div>\n        </div>\n        {props.append && (\n          <InputGroup.Append>\n            <InputGroup.Text id={`append-for-${props.id}`}>\n              {props.append}\n            </InputGroup.Text>\n          </InputGroup.Append>\n        )}\n      </InputGroup>\n\n      {error && <div className=\"ad-form-control-error\">{error}</div>}\n    </React.Fragment>\n  );\n};\n\nexport default Select;\n","import React, { useCallback, useContext } from \"react\";\nimport { AdFormContext } from \"../adform\";\nimport { debounce } from \"lodash\";\nimport { validateControl } from \"../form_utils\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\n\nconst TextArea = (props) => {\n  const { controlsWithError, formData } = useContext(AdFormContext);\n  const error = controlsWithError[props.id] || false;\n  const debounceFn = debounce((value, properties, data) => {\n    const error = validateControl(value, properties, data);\n    if (error) {\n      properties.handleChange(properties.id, value, error);\n    }\n  }, 400);\n  const handleChange = useCallback(function (e) {\n    let val = e.target.value;\n    if (props.purpose && props.purpose === \"desc\") {\n    } else {\n      if (val.trim().length > 0) {\n        val = val.split(\",\");\n      } else {\n        val = [];\n      }\n      val = val.map((item) => item.trim());\n    }\n    props.handleChange(props.id, val);\n    debounceFn(val, props, formData);\n  }, []);\n  const isRequired = props.validator\n    ? typeof props.validator === \"string\"\n      ? props.validator === \"isRequired\"\n      : props.validator.indexOf(\"isRequired\") > -1\n    : false;\n  const placeholder =\n    props.placeholder ??\n    (props.purpose === \"desc\"\n      ? `Enter ${props.label}`\n      : \"Enter comma separated values\");\n  return (\n    <React.Fragment>\n      <InputGroup>\n        {props.prepend && (\n          <InputGroup.Prepend>\n            <InputGroup.Text id={`prepend-for-${props.id}`}>\n              {props.prepend}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n        )}\n        <FormControl\n          className=\"ad-form-control-input\"\n          value={props.value}\n          as={props.type}\n          controlid={props.id}\n          onChange={handleChange}\n          placeholder={`${isRequired ? \"\" : \"(Optional)\"} ${placeholder}`}\n          isInvalid={error ? true : false}\n        />\n        {props.append && (\n          <InputGroup.Append>\n            <InputGroup.Text id={`append-for-${props.id}`}>\n              {props.append}\n            </InputGroup.Text>\n          </InputGroup.Append>\n        )}\n      </InputGroup>\n      {error && <div className=\"ad-form-control-error\">{error}</div>}\n    </React.Fragment>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\n\nconst Toggle = (props) => {\n  return (\n    <React.Fragment>\n      <label className=\"ad-form-toggle-container\" style={props.style}>\n        <span\n          className={`adform-toggle ${props.value === true ? \"active\" : \"\"}`}\n          onClick={(e) => {\n            props.handleChange(props.id, !props.value);\n          }}\n        ></span>{\" \"}\n        {props.label}\n      </label>\n    </React.Fragment>\n  );\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport Checkbox from \"./root_controls/checkbox\";\nimport Custom from \"./root_controls/custom\";\nimport Input from \"./root_controls/input\";\nimport Multistate from \"./root_controls/multistate\";\nimport Password from \"./root_controls/password\";\nimport Radio from \"./root_controls/radio\";\nimport ReadOnly from \"./root_controls/readonly\";\nimport Select from \"./root_controls/select\";\nimport TextArea from \"./root_controls/textarea\";\nimport Toggle from \"./root_controls/toggle\";\n\nclass SingleControl extends React.Component {\n  render() {\n    switch (this.props.type) {\n      case \"select\":\n        return <Select {...this.props} />;\n      case \"textarea\":\n        return <TextArea {...this.props} />;\n      case \"password\":\n        return <Password {...this.props} />;\n      case \"checkbox\":\n        return <Checkbox {...this.props} />;\n      case \"multistate\":\n        return <Multistate {...this.props} />;\n      case \"readonly\":\n        return <ReadOnly {...this.props} />;\n      case \"toggle\":\n        return <Toggle {...this.props} />;\n      case \"radio\":\n        return <Radio {...this.props} />;\n      case \"custom\":\n        return <Custom {...this.props} />;\n      default:\n        return <Input {...this.props} />;\n    }\n  }\n}\n\nexport default SingleControl;\n","import React, { useContext } from \"react\";\nimport { AdFormContext } from \"./adform\";\nimport SingleControl from \"./singleControl\";\n\nconst MultiControl = (props) => {\n  const { controlsWithError, hiddenIds } = useContext(AdFormContext);\n  function handleChange(val, index, error) {\n    let values = Array.from(props.value);\n    values[index] = val;\n    props.handleChange(values, props.id, error);\n  }\n\n  let cssClass = \"ad-form-control-multiple\";\n  const errorMsg = controlsWithError[props.id]\n    ? controlsWithError[props.id]\n    : false;\n  if (errorMsg) {\n    cssClass += \" has-error\";\n  }\n  return (\n    <div className={cssClass}>\n      {props.controls.map((ctrl, idx) => (\n        <React.Fragment key={`control-${idx}`}>\n          {hiddenIds.indexOf(ctrl.id) < 0 && (\n            <div className={`ad-form-control-holder ${ctrl.size}`}>\n              <SingleControl\n                {...ctrl}\n                id={idx}\n                handleChange={handleChange}\n                placeholder={`Enter value(${idx}) from ${props.label}`}\n              />\n            </div>\n          )}\n        </React.Fragment>\n      ))}\n      {controlsWithError[props.id] && (\n        <div className=\"ad-form-control-multiple-error\">{errorMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default MultiControl;\n","import React, { useRef, useState, useContext } from \"react\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\nimport { FaRegQuestionCircle, FaExclamationTriangle } from \"react-icons/fa\";\nimport { AdFormContext } from \"./adform\";\nimport MultiControl from \"./multiControl\";\nimport ReadOnly from \"./root_controls/readonly\";\nimport SingleControl from \"./singleControl\";\n\nconst noSeparateLabelElement = [\"checkbox\", \"toggle\"];\n\nconst Control = ({ control, value, handleChange }) => {\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n  const { hiddenIds, disabledIds, readOnly } = useContext(AdFormContext);\n  const warning = control.warn ? control.warn(value) : false;\n  return (\n    <React.Fragment>\n      {hiddenIds.indexOf(control.id) < 0 && (\n        <div className={`ad-form-control-holder ${control.size}`}>\n          {!control.noLabel &&\n            (control.label || control.help) &&\n            !(noSeparateLabelElement.includes(control.type) && !readOnly) && (\n              <div className=\"ad-form-control-label\">\n                {control.label && <label>{control.label}</label>}\n                {control.help && (\n                  <React.Fragment>\n                    <Overlay\n                      placement=\"bottom\"\n                      show={show}\n                      target={ref.current}\n                    >\n                      {(props) => (\n                        <Tooltip id={`help-tooltip-${control.id}`} {...props}>\n                          {control.help}\n                        </Tooltip>\n                      )}\n                    </Overlay>\n                    <span\n                      ref={ref}\n                      onMouseOver={(e) => {\n                        setShow(true);\n                      }}\n                      onMouseLeave={(e) => {\n                        setShow(false);\n                      }}\n                      className=\"ad-form-control-help\"\n                    >\n                      <FaRegQuestionCircle />\n                    </span>\n                  </React.Fragment>\n                )}\n              </div>\n            )}\n          {control.type === \"multiple\" && (\n            <MultiControl\n              {...control}\n              value={value}\n              handleChange={handleChange}\n            />\n          )}\n          {control.type !== \"multiple\" && (\n            <ControlElementOnly\n              control={control}\n              disabledIds={disabledIds}\n              readOnly={readOnly}\n              value={value}\n              handleChange={handleChange}\n            />\n          )}\n          {control.note && (\n            <div\n              style={{\n                opacity: \"0.7\",\n                fontStyle: \"italic\",\n                fontSize: \"0.9rem\"\n              }}\n            >\n              <b>Note:</b> {control.note}\n            </div>\n          )}\n          {warning && (\n            <div\n              style={{\n                color: \"var(--riverbed-error-color)\",\n                fontSize: \"0.9rem\"\n              }}\n            >\n              <FaExclamationTriangle /> {warning}\n            </div>\n          )}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport function ControlElementOnly({\n  disabledIds,\n  control,\n  readOnly,\n  value,\n  handleChange\n}) {\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n  const help =\n    control.help &&\n    !readOnly &&\n    (noSeparateLabelElement.includes(control.type) || control.noLabel);\n  return (\n    <div className={`ad-form-control ${help ? \"inline-help\" : \"\"}`}>\n      <div\n        className={`ad-form-control-holder ${\n          disabledIds.indexOf(control.id) > -1 ? \"no-pointer-event\" : \"\"\n        } `}\n      >\n        {readOnly && <ReadOnly {...control} value={value} />}\n        {!readOnly && (\n          <SingleControl\n            {...control}\n            value={value}\n            handleChange={handleChange}\n          />\n        )}\n      </div>\n      {help && (\n        <React.Fragment>\n          <Overlay placement=\"bottom\" show={show} target={ref.current}>\n            {(props) => (\n              <Tooltip id={`help-tooltip-${control.id}`} {...props}>\n                {control.help}\n              </Tooltip>\n            )}\n          </Overlay>\n          <span\n            ref={ref}\n            onMouseOver={(e) => {\n              setShow(true);\n            }}\n            onMouseLeave={(e) => {\n              setShow(false);\n            }}\n            className=\"ad-form-control-help\"\n          >\n            <FaRegQuestionCircle />\n          </span>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Control;\n","import React, { useContext } from \"react\";\nimport { AdFormContext } from \"./adform\";\nimport ControlGroup from \"./controlGroup\";\n\nconst Fieldset = ({ control, values, handleChange }) => {\n  const { hiddenIds } = useContext(AdFormContext);\n  return (\n    <React.Fragment>\n      {hiddenIds.indexOf(control.id) < 0 && (\n        <fieldset>\n          <legend>{control.label}</legend>\n          <ControlGroup\n            controls={control.controls}\n            values={values}\n            onChange={handleChange}\n          />\n        </fieldset>\n      )}\n    </React.Fragment>\n  );\n};\nexport default Fieldset;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Control from \"./control\";\nimport Fieldset from \"./fieldset\";\n\nclass ControlGroup extends React.Component {\n  render() {\n    return (\n      <div className=\"ad-form-controls-container\">\n        {this.props.controls.map((control) => (\n          <React.Fragment key={control.id}>\n            {control.type === \"fieldset\" && (\n              <Fieldset\n                control={control}\n                values={this.props.values}\n                handleChange={this.props.onChange}\n              />\n            )}\n            {control.type !== \"fieldset\" && (\n              <Control\n                control={control}\n                value={this.props.values[control.id]}\n                handleChange={this.props.onChange}\n              />\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    );\n  }\n}\nControlGroup.prototypes = {\n  values: PropTypes.shape(),\n  controls: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string,\n      type: PropTypes.string.isRequired,\n      size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          key: PropTypes.string,\n          value: PropTypes.string\n        })\n      ),\n      validator: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n        ),\n        PropTypes.func\n      ]),\n      help: PropTypes.string\n    })\n  ),\n  onChange: PropTypes.func\n};\n\nexport default ControlGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ControlGroup from \"./controlGroup\";\nimport \"./adform.css\";\nimport { checkDisabled, checkHidden, isShallowEqual } from \"./form_utils\";\nimport { Button } from \"react-bootstrap\";\nimport { GrRevert, GrSend } from \"react-icons/gr\";\nexport const AdFormContext = React.createContext(false);\n\nclass ADForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changedControls: [],\n      controlsWithError: {},\n      originalFormData: {},\n      formData: {},\n      showFormMessage: false,\n      controls: [],\n      hiddenIds: [],\n      disabledIds: []\n    };\n  }\n  componentDidMount() {\n    this.setupFormDataAndControl();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.texts.successSubmission !==\n        prevProps.texts.successSubmission ||\n      this.props.texts.errorSubmission !== prevProps.texts.errorSubmission\n    ) {\n      if (\n        this.props.texts.successSubmission ||\n        this.props.texts.errorSubmission\n      ) {\n        this.setState({ showFormMessage: true });\n      } else {\n        this.setState({ showFormMessage: false });\n      }\n    }\n\n    if (\n      (prevProps.values && !this.props.values) ||\n      (!prevProps.values && this.props.values) ||\n      (prevProps.values &&\n        this.props.values &&\n        !isShallowEqual(prevProps.values, this.props.values))\n    ) {\n      this.setupFormDataAndControl();\n    }\n  }\n  setupFormDataAndControl = (controls, values) => {\n    controls = controls ?? [...this.props.controls];\n    values = values ?? { ...this.props.values };\n    controls.every((control, index) => {\n      if (!control.size) {\n        control.size = \"md\";\n      }\n      if (control.controls) {\n        control.controls.every((ct) => {\n          if (!ct.size) {\n            ct.size = \"md\";\n          }\n          return true;\n        });\n      }\n      return true;\n    });\n    const { hiddenIds, disabledIds } = this.updatedDisabledAndHiddenControls(\n      values\n    );\n    this.setState({\n      formData: { ...values },\n      originalFormData: { ...values },\n      controls: controls,\n      hiddenIds,\n      disabledIds\n    });\n  };\n  updatedDisabledAndHiddenControls = (formData) => {\n    let controls = [...this.props.controls];\n    formData = formData ?? this.state.formData;\n    let { hiddenIds, disabledIds } = this.state;\n    const setHidden = (control) => {\n      const hidIdx = hiddenIds.indexOf(control.id),\n        disIdx = disabledIds.indexOf(control.id);\n      if (checkHidden(control, formData)) {\n        if (hidIdx < 0) {\n          hiddenIds.push(control.id);\n        }\n      } else {\n        if (hidIdx > -1) {\n          hiddenIds.splice(hidIdx, 1);\n        }\n      }\n      if (checkDisabled(control, formData)) {\n        if (disIdx < 0) {\n          disabledIds.push(control.id);\n        }\n      } else {\n        if (disIdx > -1) {\n          disabledIds.splice(hidIdx, 1);\n        }\n      }\n    };\n    controls.every((control, index) => {\n      setHidden(control);\n      if (control.type === \"fieldset\") {\n        const isParentHidden = hiddenIds.indexOf(control.id) > -1;\n        control.controls.every((ct) => {\n          if (isParentHidden) {\n            hiddenIds.indexOf(ct.id) < 0 && hiddenIds.push(ct.id);\n          } else {\n            const hx = hiddenIds.indexOf(ct.id);\n            hx > -1 && hiddenIds.splice(hx, 1);\n            if (ct.hide) {\n              setHidden(ct);\n            }\n          }\n          return true;\n        });\n      }\n      return true;\n    });\n    return {\n      hiddenIds,\n      disabledIds\n    };\n  };\n\n  controlOnChange = (id, value, error) => {\n    let formData = this.state.formData;\n    formData[id] = value;\n    const { hiddenIds, disabledIds } = this.updatedDisabledAndHiddenControls();\n    const { originalFormData, changedControls, controlsWithError } = this.state;\n    const ccIdx = changedControls.indexOf(id);\n    if (value === originalFormData[id]) {\n      if (ccIdx > -1) {\n        changedControls.splice(ccIdx, 1);\n      }\n    } else {\n      if (ccIdx < 0) {\n        changedControls.push(id);\n      }\n    }\n    if (error) {\n      if (!controlsWithError.hasOwnProperty(id)) {\n        controlsWithError[id] = \"\";\n      }\n      controlsWithError[id] = error;\n    } else {\n      if (controlsWithError.hasOwnProperty(id)) {\n        delete controlsWithError[id];\n      }\n    }\n\n    this.setState({\n      formData,\n      changedControls,\n      controlsWithError,\n      hiddenIds,\n      disabledIds\n    });\n    if (this.props.autoSubmit) {\n      this.formSubmissionFunctionality(formData);\n    }\n  };\n  submitForm = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.formSubmissionFunctionality();\n  };\n  formSubmissionFunctionality = (formdata) => {\n    if (Object.keys(this.state.controlsWithError).length === 0) {\n      let formData = { ...(formdata ?? this.state.formData) };\n      for (let id of this.state.hiddenIds) {\n        delete formData[id];\n      }\n      this.setState({\n        showFormMessage: false\n      });\n      this.props.submitHandler(this.props.id ?? formData.id, formData);\n    } else {\n      this.setState({\n        showStateFormMessage:\n          \"Form cannot be submitted as it contains impproper data.\"\n      });\n    }\n  };\n  resetForm = () => {\n    this.setState({\n      formData: { ...this.state.originalFormData },\n      showFormMessage: false,\n      controlsWithError: {},\n      changedControls: []\n    });\n  };\n  render() {\n    let formClasses = \"ad-form \";\n    if (this.props.noEvent) {\n      formClasses += \"no-event \";\n    }\n    if (this.props.isFormSubmitted) {\n      formClasses += \"no-event \";\n    }\n    return (\n      <form className={formClasses} style={this.props.style}>\n        {(this.props.texts.title || this.props.texts.description) && (\n          <div className=\"ad-form-header\">\n            {this.props.texts.title && (\n              <div className=\"ad-form-header-title\">\n                {this.props.texts.title}\n              </div>\n            )}\n            {this.props.texts.description && (\n              <p className=\"ad-form-description\">\n                {this.props.texts.description}\n              </p>\n            )}\n          </div>\n        )}\n\n        <AdFormContext.Provider\n          value={{\n            readOnly: this.props.readOnly,\n            controlsWithError: this.state.controlsWithError,\n            disabledIds: this.state.disabledIds,\n            hiddenIds: this.state.hiddenIds,\n            formData: this.state.formData\n          }}\n        >\n          <ControlGroup\n            controls={this.state.controls}\n            onChange={this.controlOnChange}\n            values={this.state.formData}\n          />\n        </AdFormContext.Provider>\n\n        {!(this.props.autoSubmit || this.props.readOnly) && (\n          <div className=\"ad-form-footer\">\n            <div className=\"ad-form-general-message\"></div>\n            <div className=\"ad-form-buttons\">\n              <Button\n                variant=\"outline-dark\"\n                className=\"ad-form-reset-button\"\n                onClick={(e) => this.resetForm()}\n              >\n                <GrRevert /> Reset\n              </Button>\n              <Button\n                variant=\"riverbed\"\n                onClick={this.submitForm}\n                className={`adform-submit-button ${\n                  this.props.isFormSubmitted ? \"submitting\" : \"\"\n                }`}\n              >\n                <GrSend /> Submit\n              </Button>\n            </div>\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n\nADForm.propTypes = {\n  values: PropTypes.shape(),\n  controls: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string,\n      type: PropTypes.string.isRequired,\n      size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          text: PropTypes.string,\n          value: PropTypes.string\n        })\n      ),\n      validator: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n        ),\n        PropTypes.func\n      ]),\n      help: PropTypes.string\n    })\n  ),\n  noEvent: PropTypes.bool,\n  submitHandler: PropTypes.func.isRequired,\n  autoSubmit: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  texts: PropTypes.shape({\n    successSubmission: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n      .isRequired,\n    errorSubmission: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n      .isRequired,\n    loadError: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    submitButtonText: PropTypes.string,\n    resetButtonText: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  }).isRequired,\n  isFormSubmitted: PropTypes.bool\n};\n\nexport default React.memo(ADForm);\n","import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ADForm from \"./ADForm/adform\";\nimport \"./styles.css\";\n\nexport default function App() {\n    const [values, setValues] = useState({\n        first_name: \"Srinivas\",\n        middle_name: \"ML\",\n        last_name: \"\",\n        age: 25,\n        desc: \"Desc for file\",\n        //gender: \"male\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pin: \"\",\n        allow: false,\n        use_cool: false,\n        pwd: \"\",\n        tristate: 0,\n        mc: [1, 2, 3],\n        rad: \"female\",\n    });\n    const [isSub, setIsSub] = useState(false);\n    const controls = [\n        {\n            id: \"rad\",\n            label: \"Gender\",\n            type: \"radio\",\n            size: \"sm\",\n            help: \"Chema this kla\",\n            options: [\n                {\n                    text: \"Male\",\n                    value: \"male\",\n                },\n                {\n                    text: \"Female\",\n                    value: \"female\",\n                },\n            ],\n        },\n        {\n            id: \"mc\",\n            label: \"Multiple\",\n            type: \"multiple\",\n            size: \"lg\",\n            controls: [\n                {\n                    type: \"number\",\n                    size: \"md\",\n                },\n                {\n                    type: \"number\",\n                    size: \"md\",\n                },\n                {\n                    type: \"number\",\n                    size: \"md\",\n                },\n            ],\n        },\n        {\n            id: \"use_cool\",\n            label: \"Use Cool\",\n            type: \"toggle\",\n            size: \"sm\",\n            help: \"Sample help text\",\n            style: { marginTop: \"2rem\" },\n            note: \"Why this is bad\",\n        },\n        {\n            id: \"pwd\",\n            label: \"Password\",\n            type: \"password\",\n            size: \"sm\",\n        },\n        {\n            id: \"tristate\",\n            label: \"State\",\n            type: \"multistate\",\n            size: \"sm\",\n            variant: \"primary\",\n            states: [\n                {\n                    value: 0,\n                    display: \"Solid\",\n                },\n                {\n                    value: 1,\n                    display: \"Liquid\",\n                },\n                {\n                    value: 2,\n                    display: \"Gas\",\n                },\n            ],\n        },\n        {\n            id: \"user_name_fs\",\n            label: \"Basic\",\n            type: \"fieldset\",\n            controls: [\n                {\n                    id: \"first_name\",\n                    label: \"First Name\",\n                    type: \"text\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"middle_name\",\n                    label: \"Middle Name\",\n                    type: \"text\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"last_name\",\n                    label: \"Last Name\",\n                    type: \"text\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"gender\",\n                    label: \"Gender\",\n                    type: \"select\",\n                    size: \"sm\",\n                    options: [\n                        {\n                            text: \"Male\",\n                            value: \"male\",\n                        },\n                        {\n                            text: \"Female\",\n                            value: \"female\",\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            id: \"allow\",\n            label: \"Allow Security to recieve item\",\n            type: \"checkbox\",\n            size: \"sm\",\n            help: \"Allowing security \",\n            note: \"Allowing security to view is bad\",\n            warn: val => {\n                if (val) {\n                    return \"This is Warning\";\n                }\n            },\n        },\n        {\n            id: \"allowN\",\n            label: \"Allow Security to recieve item\",\n            type: \"checkbox\",\n            size: \"sm\",\n            help: \"Allowing security \",\n            note: \"Allowing security to view is bad\",\n            warn: val => {\n                if (val) {\n                    return \"This is Warning\";\n                }\n            },\n        },\n        {\n            id: \"allowNQ\",\n            label: \"Allow Security to recieve item\",\n            type: \"checkbox\",\n            size: \"sm\",\n            help: \"Allowing security \",\n            note: \"Allowing security to view is bad\",\n            warn: val => {\n                if (val) {\n                    return \"This is Warning\";\n                }\n            },\n        },\n        {\n            id: \"address_info_fs\",\n            label: \"Address\",\n            type: \"fieldset\",\n            hide: { allow: false },\n            controls: [\n                {\n                    id: \"address\",\n                    type: \"address\",\n                    label: \"Address\",\n                    help: \"Postal Address to be fillere here\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"city\",\n                    type: \"text\",\n                    label: \"City\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"state\",\n                    type: \"text\",\n                    label: \"State\",\n                    size: \"sm\",\n                },\n                {\n                    id: \"country\",\n                    type: \"text\",\n                    label: \"Country\",\n                    size: \"sm\",\n                    validator: [validateCountry],\n                },\n                {\n                    id: \"pin\",\n                    type: \"number\",\n                    label: \"Pin\",\n                    size: \"sm\",\n                },\n            ],\n        },\n        {\n            id: \"desc\",\n            type: \"textarea\",\n            label: \"About Me\",\n            size: \"lg\",\n            purpose: \"desc\",\n        },\n        {\n            id: \"cust\",\n            type: \"custom\",\n            component: Cs,\n            label: \"Custom Form\",\n        },\n    ];\n    function validateCountry(value) {\n        if (value.length > 2) {\n            return {\n                validation: false,\n                message: \"Country code is 2 letter\",\n            };\n        }\n        return { validation: true };\n    }\n    const texts = {\n        title: \"User Information\",\n        successSubmission: \"Submitted success\",\n        errorSubmission: \"Submitted error\",\n        description: \"Provide proper information to have a hassle free delivery\",\n    };\n    const submitHandler = (id, data) => {\n        setValues(data);\n        //setIsSub(true);\n    };\n    return (\n        <div className=\"App\">\n            <ADForm\n                controls={controls}\n                texts={texts}\n                submitHandler={submitHandler}\n                values={values}\n                isFormSubmitted={isSub}\n            />\n        </div>\n    );\n}\n\nconst Cs = props => {\n    return <Button variant=\"warning\">Button for Custom Form</Button>;\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}